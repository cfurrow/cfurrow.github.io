<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Carl Furrow</title>
 <link href="http://cfurrow.github.io/" rel="self"/>
 <link href="http://cfurrow.github.io"/>
 <updated>2019-02-24T14:48:25-05:00</updated>
 <id>http://cfurrow.github.io</id>
 <author>
   <name>Carl Furrow</name>
   <email>hello@carlfurrow.com</email>
 </author>

 
 <entry>
   <title>Create a "Saturday Morning Cartoons" Playlist in Plex</title>
   <link href="http://cfurrow.github.io/personal/2019/02/24/create-saturday-morning-cartoons-playlist-in-plex"/>
   <updated>2019-02-24T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/personal/2019/02/24/create-saturday-morning-cartoons-playlist-in-plex</id>
   <content type="html">&lt;figure&gt;
  &lt;img src=&quot;/assets/posts/create-saturday-morning-cartoons-playlist-in-plex/rawpixel-788409-unsplash.jpg&quot; /&gt;
  &lt;figcaption&gt;
    Image by 
    &lt;a style=&quot;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&quot; href=&quot;https://unsplash.com/@rawpixel?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; title=&quot;Download free do whatever you want high-resolution photos from rawpixel&quot;&gt;&lt;span style=&quot;display:inline-block;padding:2px 3px&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; style=&quot;height:12px;width:auto;position:relative;vertical-align:middle;top:-2px;fill:white&quot; viewBox=&quot;0 0 32 32&quot;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&quot;M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&quot;display:inline-block;padding:2px 3px&quot;&gt;rawpixel&lt;/span&gt;&lt;/a&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Recently I setup an &lt;a href=&quot;https://unraid.net&quot;&gt;unRaid&lt;/a&gt; file server on a $50 eBay desktop, and have been moving my TV shows and movies into a &lt;a href=&quot;https://www.plex.tv&quot;&gt;Plex&lt;/a&gt; docker container running on said machine. It turns out that I have something like 14 days worth of cartoon shows, and I have a hard time curating a list of shows I want to watch on a Saturday morning when I’m feeling super lazy. But recently, I came across a Python script that gave an example of how to build a Plex playlist dynamically, based on all the episodes/movies that aired on a given day. So, for example, if you ran the script on 2019-02-10, it would scan your library for all movies and shows that had an original air date (or theater release date) of February 10th, of any year.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/blacktwin/397f07724abebd1223ba6ea644ea1669&quot;&gt;Check out the original gist, here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I loved the script so much, I modified it to allow for providing &lt;em&gt;any&lt;/em&gt; date to it, and have it create a playlist from that given date, and not be restricted to the date in which you ran it.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python aired_today_playlist.py &lt;span class=&quot;s1&quot;&gt;'2019-02-12'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/cfurrow/8bb5cb079602eafb358c9ab062ba1ebb&quot;&gt;My modified gist can be found here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This all got me thinking; “I can build custom cartoon playlists based on the next unplayed episode of each cartoon show!” So I did. When I run the script, it loops over all cartoon shows in my Plex library, and finds the first unplayed episode, and adds it to a playlist. That way, I’m always watching something I have not watched previously. Check out the code at the bottom of this post.&lt;/p&gt;

&lt;p&gt;The result looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/create-saturday-morning-cartoons-playlist-in-plex/plex-playlist.png&quot; alt=&quot;saturday morning cartoon playlist&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My lazy Saturday mornings will never be the same.&lt;/p&gt;

&lt;h2 id=&quot;the-code&quot;&gt;The code&lt;/h2&gt;
&lt;script src=&quot;https://gist.github.com/cfurrow/13a062359bd83ac17a38f8c4fcd3bab2.js&quot;&gt;&lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Game Dev Kata: Compass</title>
   <link href="http://cfurrow.github.io/personal/2018/11/28/compass-kata"/>
   <updated>2018-11-28T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/personal/2018/11/28/compass-kata</id>
   <content type="html">&lt;p&gt;I wanted to create a “compass” like that in Spelunky:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/201811/CECE5CDC-A561-40A7-A9AE-AFDD6C7B50B9.png&quot; alt=&quot;Spelunky Compass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The red arrow always points to the exit of the level. It stays on a “track” or “path”, though, in a circle around the player. So its position is restricted to that circle. When the exit to the level is in view, the arrow leaves its track, and sits above the exit door.&lt;/p&gt;

&lt;p&gt;I’ve been wanting to do this for some time. 3D games use this “circle track” technique to show where damage is coming from. It’s a 3D coordinate (the direction from where the damage came from) converted to a 2D plane (the screen).&lt;/p&gt;

&lt;p&gt;I set out make a simplified 2D version of it, like Spelunky.&lt;/p&gt;

&lt;p&gt;The end result is quite simple. I took a platform game example from Phaser’s example files, and modifie it for this example:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/201811/A8607D75-92C9-4914-9E52-171EBC159193.png&quot; alt=&quot;My Compass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The bomb serves as the compass arrow, and it rotates around the player at a constant radius of 50px, and is always pointing towards the closet star.&lt;/p&gt;

&lt;p&gt;An animation of it in action:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/201811/2018-11-28_16-22-12.gif&quot; alt=&quot;Compass in action&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Works really well!&lt;/p&gt;

&lt;p&gt;Sample code. This runs on every &lt;code class=&quot;highlighter-rouge&quot;&gt;update()&lt;/code&gt; call, e.g. every frame.&lt;/p&gt;

&lt;p data-height=&quot;609&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;vQVbOY&quot; data-default-tab=&quot;js&quot; data-user=&quot;cfurrow&quot; data-pen-title=&quot;Compass Update Method&quot; data-preview=&quot;true&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/cfurrow/pen/vQVbOY/&quot;&gt;Compass Update Method&lt;/a&gt; by Carl Furrow (&lt;a href=&quot;https://codepen.io/cfurrow&quot;&gt;@cfurrow&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Check out the code over here: &lt;a href=&quot;https://github.com/cfurrow/gamedev-kata-compass&quot;&gt;gamedev-kata-compass&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>So, I'm using Bear.app now</title>
   <link href="http://cfurrow.github.io/note%20taking/2018/02/23/so-im-using-bear-now"/>
   <updated>2018-02-23T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/note%20taking/2018/02/23/so-im-using-bear-now</id>
   <content type="html">&lt;p&gt;I did it. I think I finally found a note-taking app that will keep me away from Evernote. I’ve done this in the past multiple times. I’ve even switched from &lt;a href=&quot;http://evernote.com/&quot;&gt;Evernote&lt;/a&gt; to &lt;a href=&quot;http://www.bear-writer.com/&quot;&gt;Bear&lt;/a&gt;, and gone back to Evernote. I tried &lt;a href=&quot;https://marxi.co/&quot;&gt;Marxico&lt;/a&gt; for a couple years, and that is what brings me to this latest change.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/note%20taking/2015/01/25/how-i-evernote&quot;&gt;How I Evernote&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/note%20taking/2016/02/16/you-lost-me-evernote&quot;&gt;You lost me, Evernote&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/note%20taking/2016/10/02/marxico-evernote-markdown&quot;&gt;Marxico: Evernote + Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TL;DR I’ve switched to using the &lt;a href=&quot;http://www.bear-writer.com/&quot;&gt;Bear&lt;/a&gt; app to take all my daily dev log notes after YEARS of using Evernote, and I love it!&lt;/p&gt;

&lt;h2 id=&quot;it-was-hard&quot;&gt;It was hard&lt;/h2&gt;
&lt;p&gt;I’ve been using Evernote since 2008, and have amassed 15,000+ notes, screenshots, code-snippets, saved web pages, etc. I took over 1,300 notes for my last gig alone! Every day I wrote down my “stream of work”, which ends up being a wealth of information about what I did each day, cool links I found that helped me solve a problem, conversations I had with co-workers, code snippets that fixed a bug, details of calls/chats I had to make, etc. The referential value of those notes is very high for me as someone who feels like their memory is not amazing. Being able to open up an app, search for a topic, and find not only the information I was looking for, but also the context of the information, is practically priceless. I get to see “why” I wrote the info down, why I did it that way on that day, etc, and it was all inside of Evernote.&lt;/p&gt;

&lt;p&gt;That is why it has always been hard to move away from Evernote. It has everything! It was searchable! I spent years figuring out how I wanted to organize my data with tags, keywords, notebooks, etc.&lt;/p&gt;

&lt;h2 id=&quot;i-never-loved-evernote&quot;&gt;I never &lt;em&gt;loved&lt;/em&gt; Evernote&lt;/h2&gt;

&lt;p&gt;When I first started using Evernote back in 2008, I’d come from using Microsoft’s OneNote in college, and at my first gig post-college. I then abandon OneNote a few years later when I changed jobs, and the new place offered me a Macbook Pro, and OneNote was either not on MacOS or it was in poor shape. That is when I found Evernote. It was simple, and it didn’t have intuitive key combos like OneNote did, but it got the job done. I could create notes, notebooks, tags, and search on any of those fields. No syntax highlighting, but OneNote did not have that either.&lt;/p&gt;

&lt;p&gt;After a few years of using Evernote, I began to feel its “limitations”, as I saw them. I began to hear about “Markdown”, which felt like my cup of tea because you could “just write” and the formatting comes in later. There was still no way to natively support syntax highlighting within Evernote, which was at-odds with how I started to write my daily deveveloper logs. The keyboard shortcuts were not intuitive, and required moving my fingers significantly away from the typing position to perform them. I simply stopped enjoying Evernote. It could receive notes, webpages, screenshots, etc, but it was not an app I enjoyed to use. It made me constantly look for alternatives.&lt;/p&gt;

&lt;p&gt;I tried intermediate steps, like using an &lt;a href=&quot;https://atom.io/packages/copy-as-rtf&quot;&gt;editor plugin&lt;/a&gt; that allowed me to copy code from my code editor, and paste into Evernote as rich text. That worked pretty well for a time, but I wanted a more integrated solution.&lt;/p&gt;

&lt;p&gt;I then used &lt;a href=&quot;https://atom.io/packages/ever-notedown&quot;&gt;Ever Notedown&lt;/a&gt;, which was an &lt;a href=&quot;https://atom.io/&quot;&gt;Atom editor&lt;/a&gt; plugin that let me write all my notes in Markdown inside of Atom, and they would be exported to Evernote when I saved them. This was a pretty good solution for a while, but it eventually did not feel as polished as a native note-taking app. It wasn’t what I wanted, and again, I was not enjoying myself. I began to realize how important that was.&lt;/p&gt;

&lt;p&gt;My next experiment was with &lt;a href=&quot;https://marxi.co/&quot;&gt;Marxico&lt;/a&gt;, which was its own application that let me write in Markdown, and it would export to Evernote via their API. I ended up using this app for the better part of three years, and took thousands of notes inside of Marxico. I would have continued to use Marxico had it not been for an itch to try the &lt;a href=&quot;http://www.bear-writer.com/&quot;&gt;Bear app&lt;/a&gt; again.&lt;/p&gt;

&lt;p&gt;I’d used it a few times, and even tried importing all my Evernote notes into Bear but it was a complete mess. The import script I was using messed the dates of the incoming notes and every single one of my 7000+ notes were “modified today”. It was so gross to look at. I had a hard time trying to find notes based on something that happened a few days ago, but I had little to go on. With all my notes marked as “created” or “edited” recently, I abandoned Bear to go back to Evernote where my dates and notes still made sense to me.&lt;/p&gt;

&lt;p&gt;But, this latest time using Bear was different. I thought to myself, “Don’t try to mimic Evernote. Don’t import your notes, just write.”&lt;/p&gt;

&lt;p&gt;With this new mindset, I’m loving Bear. I can take notes quickly, drop code snippets in with syntax-highlighting, tag, nest-tags, search, etc. I find I’m using Bear more than I used Evernote to do things like take notes on an article I read: grabbing quotes, images/graphs from the post, making my own comments or providing supplimentary links. It’s a real delight, and I don’t think I’m going to go back to Evernote, or the supplimentary apps.&lt;/p&gt;

&lt;h2 id=&quot;what-is-your-routine&quot;&gt;What is your routine?&lt;/h2&gt;

&lt;p&gt;If you’ve read my &lt;a href=&quot;/note%20taking/2015/01/25/how-i-evernote&quot;&gt;“How I Evernote”&lt;/a&gt; post I wrote a few years ago, you’ll get a sense of how I used Evernote to write down a “developer journal” every day. I won’t go too much into that, but here is my high-level overview.&lt;/p&gt;

&lt;h3 id=&quot;create-one-note-per-day-for-work&quot;&gt;Create one note per day for work&lt;/h3&gt;
&lt;p&gt;I start off each day by creating a new note for my work. I have a &lt;a href=&quot;https://textexpander.com/&quot;&gt;TextExpander&lt;/a&gt; (note, you can also use &lt;a href=&quot;http://www.trankynam.com/atext/&quot;&gt;aText&lt;/a&gt;) shortcut that helps me fill in basic details. I create the new note in Bear, then type &lt;code class=&quot;highlighter-rouge&quot;&gt;bbwork&lt;/code&gt; which then outputs the following markdown:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# 2018.02.27 - Work&lt;/span&gt;

&lt;span class=&quot;gh&quot;&gt;#work&lt;/span&gt;

{cursor gets placed here}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It creates an H1 heading with the current date, a dash and then “Work”. This becomes the title of the note.&lt;/p&gt;

&lt;p&gt;It then adds &lt;code class=&quot;highlighter-rouge&quot;&gt;#work&lt;/code&gt; to the note, which adds a single tag. You can do as many tags as you want or need, but for this note type, I only use one.&lt;/p&gt;

&lt;p&gt;Then it puts the cursor a few lines down from the tag, so I can continue typing right away.&lt;/p&gt;

&lt;h3 id=&quot;use-h1-headers-to-describe-high-level-tasks&quot;&gt;Use H1 headers to describe high-level tasks&lt;/h3&gt;
&lt;p&gt;When I change tasks, I create an H1 tag in markdown (a single &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;) followed by a short description of what I’m doing, and then the current time in parenthesis.&lt;/p&gt;

&lt;p&gt;I use my TextExpander shortcut for this as well. I type &lt;code class=&quot;highlighter-rouge&quot;&gt;//1&lt;/code&gt; and I get a little dialog that pops up that pre-fills the single &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; and time, so I just have to write the details.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/20180227/textexpander-dialog.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;i-use-h2-headers-to-add-sub-headers-to-a-high-level-task&quot;&gt;I use H2 headers to add sub-headers to a high-level task&lt;/h3&gt;
&lt;p&gt;Similar to &lt;code class=&quot;highlighter-rouge&quot;&gt;//1&lt;/code&gt;, I have &lt;code class=&quot;highlighter-rouge&quot;&gt;//2&lt;/code&gt;, which creates an H2 tag (&lt;code class=&quot;highlighter-rouge&quot;&gt;##&lt;/code&gt;) and allows for a short description, and drops the timestamp at the end.&lt;/p&gt;

&lt;h3 id=&quot;i-timestamp-details-inside-a-task&quot;&gt;I timestamp details inside a task&lt;/h3&gt;
&lt;p&gt;When writing under a header (h1 or h2), I tend to write a lot, especially when trying to solve a problem. I do some research, drop in some code snippets, read a link or two, and comment on them, etc. This takes time. So as I’m doing that research, I tend to timestamp individual lines of notes. It looks something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/20180227/example-note.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I use another TextExpander macro, &lt;code class=&quot;highlighter-rouge&quot;&gt;ptime&lt;/code&gt; to put the current time inside parenthesis, followed by a single space, so I can quickly drop a timestamp and continue typing.&lt;/p&gt;

&lt;h3 id=&quot;i-note-major-interruptions-to-my-work-flow&quot;&gt;I note major interruptions to my work flow&lt;/h3&gt;
&lt;p&gt;Similar to &lt;code class=&quot;highlighter-rouge&quot;&gt;//1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;//2&lt;/code&gt;, I have a third header for interruptions, &lt;code class=&quot;highlighter-rouge&quot;&gt;//i&lt;/code&gt;. It outputs the following:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;# INTERRUPTION - description goes here (current time)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I like to note when I have to do a major, unplanned context-switch.&lt;/p&gt;

&lt;h3 id=&quot;i-use-the-quote--often&quot;&gt;I use the quote &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; often&lt;/h3&gt;
&lt;p&gt;When copying details from an email, slack, or website, I like to mark them as quoted so I know it came from somewhere else. To quote something in Markdown, you start the line with a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; followed by a space, then write. As long as you do not create a new line, everything you type will be quoted and styled. An example:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/20180227/quote-example.jpg&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;i-add-tags-as-my-day-progresses&quot;&gt;I add tags as my day progresses&lt;/h3&gt;
&lt;p&gt;In a single note, I may add more tags to the note as my day goes on. If I touch project X, I’ll add a tag to my note to indicate that, &lt;code class=&quot;highlighter-rouge&quot;&gt;#project/x&lt;/code&gt;, or maybe I worked on something involving Facebook, I’ll add my &lt;code class=&quot;highlighter-rouge&quot;&gt;#facebook&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;If I don’t use tags, I try to add enough descriptive, and varying text around the topic so that I can find it easier later. If I copied something from an article, let’s say, I may rewrite part of it in my own words, or for my own understanding, so if I need to look this up later, I’ll be more inclined to find the note because I’ll search using terminology that I understand.&lt;/p&gt;

&lt;h3 id=&quot;my-textexpander-macros-for-note-taking&quot;&gt;My TextExpander macros for note taking:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ddate&lt;/code&gt; =&amp;gt; the current date: “2018.02.27”&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ttime&lt;/code&gt; =&amp;gt; the current time, followed by a space: “10:49AM “&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ptime&lt;/code&gt; =&amp;gt; the current time in parenthesis, followed by a space: “(10:49AM) “&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dtime&lt;/code&gt; =&amp;gt; the current date and time: “2018.02.27 10:49AM “&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;//1&lt;/code&gt; =&amp;gt; create an H1 with a timestamp and room for description: “# Description goes here (10:49AM)”&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;//2&lt;/code&gt; =&amp;gt; create an H2 with a timestamp and room for description: “## Description goes here (10:49AM)”&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;//3&lt;/code&gt; =&amp;gt; create an H1 for the interruption, with a timestamp and room for description: “# INTERRUPTION - Description goes here (10:49AM)”&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thats-really-it&quot;&gt;That’s really it&lt;/h2&gt;
&lt;p&gt;This is the system that I’ve found works for me.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Colorize Your Log Output in iTerm2</title>
   <link href="http://cfurrow.github.io/personal/2017/12/22/colorize-log-output"/>
   <updated>2017-12-22T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/personal/2017/12/22/colorize-log-output</id>
   <content type="html">&lt;p&gt;Let’s get right to it: this is what my log output looks like in iTerm 2&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cfurrow.github.io/assets/photos/2017.12.22/01.png&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cfurrow.github.io/assets/photos/2017.12.22/02.png&quot; alt=&quot;02&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cfurrow.github.io/assets/photos/2017.12.22/03.png&quot; alt=&quot;03&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The rules to colorize that output are as follows&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Three or more ‘#’ in a row, colorizes all of them with a pink background&lt;/li&gt;
  &lt;li&gt;POST/PUT followed by some text get highlighted in blue&lt;/li&gt;
  &lt;li&gt;GET followed by text gets highlighted in green&lt;/li&gt;
  &lt;li&gt;Render times get highlighted depending on the total time
    &lt;ul&gt;
      &lt;li&gt;Short times are green (&amp;lt; 100ms)&lt;/li&gt;
      &lt;li&gt;Medium times are yellow (101-500ms)&lt;/li&gt;
      &lt;li&gt;Long times are red (500ms+)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Lines with “error”, “exception”, etc, are highlighted in red
    &lt;ul&gt;
      &lt;li&gt;HTTP response codes of 4xx or 5xx are also highlighted in red&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-do-i-do-that&quot;&gt;How do I do that?&lt;/h2&gt;
&lt;p&gt;Triggers! Open up your iTerm2 preferences, and edit your profile(s) to add triggers that watch all output in your terminal window, and take an action if the trigger was tripped. You only have to be moderately comfortable with regular expressions to setup a trigger; you can tell from my rules below!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cfurrow.github.io/assets/photos/2017.12.22/04.png&quot; alt=&quot;04&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My triggers are centerd around Rails server log output, so your matches/regular expressions may differ from mine, but the concept will be the same. Look at what your server outputs for a request, and build a regular expression around that content and highlight them as desired.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cfurrow.github.io/assets/photos/2017.12.22/05.png&quot; alt=&quot;05&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Wolfenstein 3D: FizzleFade</title>
   <link href="http://cfurrow.github.io/javascript/2017/09/02/wolfenstein-fizzle"/>
   <updated>2017-09-02T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/javascript/2017/09/02/wolfenstein-fizzle</id>
   <content type="html">&lt;p&gt;While trying to read through my recent Instapaper articles, I was excited to come across &lt;a href=&quot;http://fabiensanglard.net/fizzlefade/index.php&quot;&gt;Fabien Sanglard’s breakdown of Wolfenstein 3D’s FizzleFade function&lt;/a&gt;. It also reminded me to purchase his eBook, &lt;a href=&quot;https://play.google.com/store/books/details/Fabien_Sanglard_Game_Engine_Black_Book?id=Lq4yDwAAQBAJ&quot;&gt;Game Engine Black Book: Wolfenstein 3D&lt;/a&gt;. Anyway, you should read the article; it’s short and explains the technique well.&lt;/p&gt;

&lt;p&gt;After reading it, I wanted to recreate the C code in JavaScript. There’s not much more to it than that. See for yourself!&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'screen'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fizzle_pixel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rgb(255,0,0)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fizzlefade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Y = low 8 bits&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x000FF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// X = High 9 bits&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;randomValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1FF00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Get the output bit.&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;leastSignificantBit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;randomValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Shift register&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;randomValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// If the output is 0, the xor can be skipped&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;leastSignificantBit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;randomValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00012000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// If x,y coordinate within the screen width/height, fizzle it!&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;320&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;fizzle_pixel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;randomValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fizzlefade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A live example of the code below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;em&gt;Mobile Safari is not liking the &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt;, and instead jumps right to the end. Perhaps if I’d used &lt;code class=&quot;highlighter-rouge&quot;&gt;requestAnimationFrame&lt;/code&gt; it would be more fluid.&lt;/em&gt;&lt;/p&gt;

&lt;style&gt;
canvas {
  background-color: #000;
  background-image: url(http://lorempixel.com/800/600);
  background-repeat: no-repeat;
  background-size: cover;
  width: 70%;
}
#fizzle-example {
  text-align: center;  
}
&lt;/style&gt;

&lt;div id=&quot;fizzle-example&quot;&gt;
  &lt;canvas id=&quot;screen&quot; width=&quot;320&quot; height=&quot;200&quot;&gt;&lt;/canvas&gt;
  &lt;br /&gt;
  &lt;a id=&quot;rerun&quot; href=&quot;javascript:void(0);&quot;&gt;Re-run&lt;/a&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;If the above live example didn’t work, this gif ought to illustrate the effect:
&lt;img src=&quot;/images/fizzle-fade/fizzlefade.gif&quot; width=&quot;70%&quot; alt=&quot;fizzlefade&quot; /&gt;&lt;/p&gt;

&lt;script&gt;
window.onload = function(){
  var screen = document.getElementById('screen');
  var height = screen.height;
  var width = screen.width;
  var ctx = screen.getContext('2d');
  var $rerun = document.getElementById('rerun');
  $rerun.addEventListener('click', function(){
    fizzlefade();
  })

  function fizzle_pixel(x, y) {
    setTimeout(function() {
      ctx.fillStyle = 'rgb(255,0,0)';
      ctx.fillRect(x, y, 1, 1);
    }, 10);
  }

  function fizzlefade() {
    ctx.clearRect(0,0, width,height);
    var randomValue = 1;
    var x, y;
    do {
      // Y = low 8 bits
      y = randomValue &amp; 0x000FF;
      // X = High 9 bits
      x = (randomValue &amp; 0x1FF00) &gt;&gt; 8;
      // Get the output bit.
      var leastSignificantBit = randomValue &amp; 1;
      // Shift register
      randomValue &gt;&gt;= 1;
      // If the output is 0, the xor can be skipped
      if (leastSignificantBit !== 0) {
        randomValue ^= 0x00012000;
      }
      // If x,y coordinate within the screen width/height, fizzle it!
      if (x &lt; width &amp;&amp; y &lt; height) {
        fizzle_pixel(x, y);
      }
    } while (randomValue != 1);
  }

  fizzlefade();
}
&lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Alfred Workflow: WIP List</title>
   <link href="http://cfurrow.github.io/personal/2017/05/11/alfred-wip"/>
   <updated>2017-05-11T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/personal/2017/05/11/alfred-wip</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/images/alfred-wip/check-list2-2400px.png&quot; width=&quot;30%&quot; alt=&quot;task list&quot; /&gt;
&lt;br /&gt;
&lt;cite&gt;Image by &lt;a href=&quot;https://openclipart.org/detail/182735/check-list&quot;&gt;crisg&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;I created an &lt;a href=&quot;https://www.alfredapp.com/&quot;&gt;Alfred&lt;/a&gt; workflow that allows quick access to my WIP (work in progress) project link groups.&lt;/p&gt;

&lt;p&gt;When working on projects, or features, I tend to have multiple links associated with it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;JIRA/Trello link&lt;/li&gt;
  &lt;li&gt;In-progress code link (github)&lt;/li&gt;
  &lt;li&gt;Design mocks (Invision)&lt;/li&gt;
  &lt;li&gt;Latest test build URL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I use these links when I’m taking my daily notes in &lt;a href=&quot;https://marxi.co/&quot;&gt;Marxico&lt;/a&gt;, and want to drop context of the currently active task that I’m writing
about. I found that when I switch context, it’s helpful to come back to a list of links that get me back up to speed quickly. To see more of how I take daily dev notes, see &lt;a href=&quot;/note%20taking/2015/01/25/how-i-evernote&quot;&gt;“How I Evernote”&lt;/a&gt; for an idea of how I did it in 2015; I’ve altered it slightly more recently and will write about that soon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/alfred-wip/marxico.png&quot; alt=&quot;Marxico&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-the-alfred-workflow-works&quot;&gt;How the Alfred Workflow Works&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Open Alfred&lt;/li&gt;
  &lt;li&gt;Type in “wip” followed by a space, and start typing (or, simply type space again to see all items)&lt;/li&gt;
  &lt;li&gt;Select an item, and press “Enter” on it. Your links will be copied to your clipboard&lt;/li&gt;
  &lt;li&gt;Paste it somewhere!&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;small-12 small-centered columns&quot;&gt;
    &lt;video style=&quot;width:100%&quot; src=&quot;https://d3vv6lp55qjaqc.cloudfront.net/items/3y2d2D032k3A100F3e0b/Screen%20Recording%202017-05-15%20at%2006.38%20PM.mov&quot; preload=&quot;auto&quot; autoplay=&quot;true&quot; loop=&quot;true&quot; /&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;how-to-add-new-items-to-the-list&quot;&gt;How to add new items to the list&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Edit your wip.yml file, save it&lt;/li&gt;
  &lt;li&gt;Open Alfred&lt;/li&gt;
  &lt;li&gt;Type “wip  “ (two spaces after wip)&lt;/li&gt;
  &lt;li&gt;See your new item in the list!&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;small-12 small-centered columns&quot;&gt;
    &lt;video width=&quot;100%&quot; src=&quot;https://d3vv6lp55qjaqc.cloudfront.net/items/2v251h051w3Z0K3U3B2p/Screen%20Recording%202017-05-15%20at%2006.53%20PM.mov&quot; preload=&quot;auto&quot; autoplay=&quot;true&quot; loop=&quot;true&quot; /&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;where-do-i-download&quot;&gt;Where do I download?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.dropbox.com/s/pvgnkdfbrfcrp4w/List%20WIP%20Projects%20v1.0.alfredworkflow?dl=1&quot;&gt;Right here!&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Journey to build a $250 gaming PC</title>
   <link href="http://cfurrow.github.io/personal/2017/01/20/250-budget-pc"/>
   <updated>2017-01-20T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/personal/2017/01/20/250-budget-pc</id>
   <content type="html">&lt;p&gt;I’d been watching a fair bit of YouTube channels, like &lt;a href=&quot;https://www.youtube.com/channel/UCSy7VGPa8Np8PNjV7Mz-xZg&quot;&gt;Tech By Matt&lt;/a&gt; for the better part of a year, and what I really loved was all the different ways you could build a $200-$250 gaming machine that performed decently well. I used to be a PC gamer until about 10 years ago, when I switched to the Xbox360, then on to the PS4 in 2014. I still love my console game experience, but I was hoping to get more into the indie gaming scene, and that’s so much easier on the PC.&lt;/p&gt;

&lt;h2 id=&quot;quick-jump-to&quot;&gt;Quick jump to:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#specs&quot;&gt;Just take me to the specs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#benchmarks&quot;&gt;Show me the benchmarks!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tower&quot;&gt;The tower/cpu/motherboard&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#rest&quot;&gt;The rest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;i-completely-failed-to-stay-within-my-budget&quot;&gt;I completely failed to stay within my budget&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;And I’m not actually bad at math&lt;/strong&gt;, most of the time. I kept finding parts that were close to what I was looking for, but just a little better, and for not &lt;em&gt;that&lt;/em&gt; much more, but, it added up.&lt;/p&gt;

&lt;p&gt;For instance, I initially was looking for Dell/Lenovo mid-to-large ATX towers with an i5-2400 processor, and 4GB of RAM, with the intention of bumping the RAM to 8GB. Then I found machines that had 8GB of RAM already installed, plus 1TB HDDs (more on that in a bit), and the next-gen i5 processor (3xxx series vs 2xxx series). I couldn’t help myself!&lt;/p&gt;

&lt;p&gt;My budget was completely destroyed as soon as I found that Lenovo. I was hoping to spend about $100 on the case, motherboard, processor, RAM combo, and then add parts as needed. That would have worked great with any i5-2400 build I saw, but as soon as I realized I could get an i5-3470 or i5-3570 for &lt;em&gt;around&lt;/em&gt; the same price, I stopped looking at 2400s. Being that the i5-3xxx are the generation after the i5-2xxxx, and about a year newer, it felt like a better deal.&lt;/p&gt;

&lt;p&gt;What did $170 get me?&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;tower&quot;&gt;&lt;/a&gt;
&lt;img src=&quot;/images/i5-3470/lenovo-m82.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;lenovo-thinkcentre-m82-specs&quot;&gt;Lenovo Thinkcentre m82 specs&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Mid tower ATX case&lt;/li&gt;
  &lt;li&gt;Lenovo motherboard&lt;/li&gt;
  &lt;li&gt;280W Lenovo PSU&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ark.intel.com/products/68316/Intel-Core-i5-3470-Processor-6M-Cache-up-to-3_60-GHz&quot;&gt;i5-3470&lt;/a&gt; Intel CPU&lt;/li&gt;
  &lt;li&gt;8GB DDR3 1600 RAM&lt;/li&gt;
  &lt;li&gt;1TB Western Digital Black HDD&lt;/li&gt;
  &lt;li&gt;DVD-RW&lt;/li&gt;
  &lt;li&gt;OEM copy of Windows 10&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not too bad, I thought. Pricing out the additional parts felt like I was getting somewhat of a deal, and it saved me some time shopping around, or so I thought.&lt;/p&gt;

&lt;p&gt;The Lenovo arrived within a few days, and I plugged that thing in right away. It booted, as advertised, and jumped into Windows 10, as advertised. The problems came with the hard drive. Yes, it was a 1TB Western Digital Black, but it was an &lt;em&gt;old&lt;/em&gt; one. Years old, and it showed. It was loud; making lots of crunchy noises as it read files in/out of memory, and it was really slow. I think I saw it max out at just a few MB/s transfer, and the read-delays were verging on 0.5s, or higher. Making &lt;em&gt;everything&lt;/em&gt; slow that needed to access the disk.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;rest&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-rest&quot;&gt;The Rest&lt;/h2&gt;
&lt;p&gt;Now I needed a new HDD, and that also meant I needed a new copy of Windows 10, because my build did not come with the activation key. In fact, it was an unactivated copy of Windows 10 that would require activation by June 2017. This was part of what I ordered, and I figured I could hold off on buying that key, but not anymore.&lt;/p&gt;

&lt;p&gt;I found an OEM Windows 10 DVD + key on eBay for $40, and picked up a brand new WD Blue 1TB HDD off Amazon for $50.&lt;/p&gt;

&lt;h3 id=&quot;asus-gtx-970-strix&quot;&gt;ASUS GTX 970 Strix&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/i5-3470/gtx970.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was shopping around for a graphics card that would now compliment my CPU. I saw most people going with something like a GTX 950 2GB, or even an AMD RX 460/470. It was running anywhere from $130 to $200 for used and new cards. That would really eat into my already broken budget, but it was the second most essential piece to my “budget gaming PC” so I wanted it to be worth it, and not need to be upgraded within the year.&lt;/p&gt;

&lt;p&gt;I came across a slightly used GTX 970, which was coming in $30 under other eBay auctions I’d been following. Plus, it was a “Buy it Now” option, so I could have it right away, and not have to try my hand at bid-sniping at the last second. I gave in. It’s a pretty sweet card, with some awesome cooling on it. It’s completely silent unless the temp goes above 70C, which I have yet to get to get. Once it gets a bit warmer, the dual fans kick on, but, again, I’ve not even heard that yet, and I’ve had it for almost two weeks.&lt;/p&gt;

&lt;h3 id=&quot;the-power-supply&quot;&gt;The Power Supply&lt;/h3&gt;
&lt;p&gt;I knew that getting any GTX 970, or similar, would mean I’d need to upgrade my PSU: it’s a power-hungry card! I wanted to get at least a 500W so I’d be “covered”. I also had always heard that if you’re buying a PSU, always buy new, because you have no idea what a used one went through. I decided that was probably good advice, so that’s how I came to buy the &lt;a href=&quot;https://www.amazon.com/gp/product/B00H33SFJU/&quot;&gt;EVGA 500W PSU off Amazon&lt;/a&gt; for $38.&lt;/p&gt;

&lt;h3 id=&quot;the-stupid-motherboard&quot;&gt;The stupid motherboard&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/i5-3470/14pin.JPG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I had a few days for all my parts to arrive, so I thought I’d do some cleaning inside the case. That’s when I really took notice of the power supply pins on the motherboard. A normal pin config for power going from the power supply, to the motherboard, is 20-24 pin. Mine was 14. After a quick google search, I found dozens of articles of people buying second-hand Lenovos, and getting frustrated that there was no way to upgrade the power supply, because of this odd pin configuration. I was crushed! I felt my build was dead in the water, and that I’d have to find a new LGA1155 motherboard for my i5 (about $50), and blow my budget even more. Luckily, there was a handy adapter, just for this occasion, and I thought I’d risk it and &lt;a href=&quot;https://www.amazon.com/gp/product/B00WE5KSFQ/ref=oh_aui_detailpage_o05_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;buy it for $5&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;specs&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;final-build-specs&quot;&gt;Final build specs&lt;/h2&gt;

&lt;table style=&quot;margin: 0 auto; width: 100%; max-width: 56.25rem;&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Thing&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Lenovo Thinkcentre m82&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;$170 (used) eBay&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ASUS GTX 970 Strix 4GB&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;$165 (used) eBay&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;
        &lt;a href=&quot;https://www.amazon.com/gp/product/B00H33SFJU/&quot;&gt;EVGA 500W PSU&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;$38 (new) Amazon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;
        &lt;a href=&quot;https://www.amazon.com/gp/product/B00WE5KSFQ/&quot;&gt;24 to 14 pin PSU adapter&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;$5 (new) Amazon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://www.amazon.com/gp/product/B0088PUEPK/&quot;&gt;1TB WD Blue HDD&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;$50 (new) Amazon&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;OEM Windows 10 DVD+Key&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;$40 (new) eBay&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Total Price&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;$468 (+$218 over budget)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;it-worked&quot;&gt;It worked!&lt;/h2&gt;
&lt;p&gt;In order to see if the power supply and motherboard would play nicely, I setup my system without the GTX970 first, to ensure I wasn’t about to fry everything I just purchased. It booted just fine to Windows 10, great! I let it run for a bit, loaded up some 1080p videos, and even started up a steam game or two. Astroneer ran at about 10fps with the built-in Intel graphics card.&lt;/p&gt;

&lt;p&gt;I shut it all down, installed the GTX970, plugged in the additional power cables it required, and rebooted the system, and it worked again! Got to windows, installed the nVidia drivers, and after another reboot, I was playing Astroneer at a steady 60fps!&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;benchmarks&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;benchmarks&quot;&gt;Benchmarks!&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/X9VEX25VT88&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;table style=&quot;margin: 0 auto; width: 100%; max-width: 56.25rem;&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Benchmark Name&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Score&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;http://www.3dmark.com/fs/11398502&quot;&gt;3DMark Firestrike 1.1&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;8607&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;http://www.3dmark.com/spy/1049446&quot;&gt;3DMark Time Spy 1.0&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3297&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Doom (1080p Ultra settings)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;56.62fps&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Skyrim Special Edition (1080p Ultra settings) *&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;52.48fps&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Fallout 4 (1080p Ultra settings)**&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;53.58fps&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;City Skylines (1080p Ultra settings)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;39.66fps&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;small&gt;&lt;em&gt;* about 45 mods installed&lt;/em&gt;&lt;/small&gt;
&lt;small&gt;&lt;em&gt;** about 20 mods installed&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Overall, I’m very pleased. I’ve thrown a lot at this little machine, and it is exceeding my expectations.&lt;/p&gt;

&lt;p&gt;Also, in case anyone is interested in the FPS overlay I was using, it was &lt;a href=&quot;https://camwebapp.com/&quot;&gt;CAM&lt;/a&gt; by NZXT. It wasn’t working inside of DOOM, so I had to use DOOM’s built-in performance monitor, which worked out well.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Phaser.js - Wave Example</title>
   <link href="http://cfurrow.github.io/game%20development/2016/10/02/phaser-js-wave-example"/>
   <updated>2016-10-02T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/game%20development/2016/10/02/phaser-js-wave-example</id>
   <content type="html">&lt;p&gt;I posted this animation to Twitter a few weeks ago, and I thought I’d walk through the origin story of how it came to be and the steps I took to create it.&lt;/p&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;column small-centered small-12 medium-centered medium-6&quot;&gt;
    &lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Goodnight. &lt;a href=&quot;https://t.co/uimVkBzqdb&quot;&gt;pic.twitter.com/uimVkBzqdb&lt;/a&gt;&lt;/p&gt;&amp;mdash; Carl Furrow (@carl_furrow) &lt;a href=&quot;https://twitter.com/carl_furrow/status/772992053810606080&quot;&gt;September 6, 2016&lt;/a&gt;&lt;/blockquote&gt;
    &lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;I was on &lt;a href=&quot;https://www.reddit.com/r/phaser/comments/4svphl/is_there_actually_a_way_to_wrap_the_texture_of_a/&quot;&gt;/r/phaser&lt;/a&gt; and &lt;a href=&quot;https://www.reddit.com/user/oddkraken&quot;&gt;/u/oddkraken&lt;/a&gt; was wondering how to wrap a texture over a &lt;code class=&quot;highlighter-rouge&quot;&gt;Phaser.Rope&lt;/code&gt; object. If you’re not familiar with a &lt;code class=&quot;highlighter-rouge&quot;&gt;Phaser.Rope&lt;/code&gt; object, &lt;a href=&quot;http://phaser.io/examples/v2/sprites/rope&quot;&gt;check out this example&lt;/a&gt;. Below is the reddit post:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The rope documentation says&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;A Rope is a Sprite that has a repeating texture. The texture will automatically wrap on the edges as it moves.&lt;/p&gt;
  &lt;/blockquote&gt;

  &lt;p&gt;As the texture moves? The rope? I’ve tried moving the rope around and adjusting the crop and frame of the texture, but nothing works. I’m using ropes for waves in my game (http://orangesea.oddkraken.com/), and I want to scroll the texture by while keeping the waves moving up and down, so it looks like the player is moving to the right.&lt;/p&gt;

  &lt;p&gt;Is there a better way to go about this?
Thanks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This particular use of &lt;code class=&quot;highlighter-rouge&quot;&gt;Phaser.Rope&lt;/code&gt; is not possible at this time. A Rope’s texture ends up being “glued” to the rope object, and cannot be transformed left/right down the rope’s geometry. Each segment of the rope is “fused” to the texture at it’s x-position at creation-time, essentially. See the video below and note that each green square is a segment of the rope, and inside that segment, the texture is mapped to that square, and cannot be shifted left or right (or up or down).&lt;/p&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;small-12 small-centered medium-6 medium-centered column&quot;&gt;
    &lt;figure&gt;
    &lt;video width=&quot;100%&quot; autoplay=&quot;&quot; loop=&quot;&quot; preload=&quot;&quot;&gt;
      &lt;source src=&quot;/images/phaser-waves/rope-example.mp4&quot; type=&quot;video/mp4&quot; /&gt;
      &lt;source src=&quot;/images/phaser-waves/rope-example.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;/video&gt;
    &lt;figcaption&gt;Rope example.&lt;/figcaption&gt;
    &lt;/figure&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;But, that does not mean we cannot accomplish something similar in Phaser, so I tried my hand at it.&lt;/p&gt;

&lt;h2 id=&quot;what-i-needed&quot;&gt;What I needed&lt;/h2&gt;
&lt;p&gt;To build this example, I would need some assets. I went to work inside of &lt;a href=&quot;http://pyxeledit.com/&quot;&gt;Pyxel Edit&lt;/a&gt; and built a little boat, and a spritesheet of some waves. I tend to make all my pixel assets as 32x32 images, then scale them up on export, or inside of Phaser (note: if you scale up in Phaser, you’ll want to set &lt;code class=&quot;highlighter-rouge&quot;&gt;yourSprite.smoothed=false;&lt;/code&gt; or else it’ll look blurry.)&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;super cool boat&quot; src=&quot;/images/phaser-waves/boat.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;realistic looking waves&quot; src=&quot;/images/phaser-waves/wave.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Great! Assets done and looking pretty good.&lt;/p&gt;

&lt;h2 id=&quot;waves-need-to-move-like-waves&quot;&gt;Waves need to move like waves&lt;/h2&gt;
&lt;p&gt;Next, I needed to come up with a way to place these waves next to each other, and allow them to move independently in a “wave-like” fashion. Rolling and bobbing up and down.&lt;/p&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;small-12 small-centered medium-6 medium-centered column&quot;&gt;
    &lt;figure&gt;
    &lt;video width=&quot;100%&quot; autoplay=&quot;&quot; loop=&quot;&quot; preload=&quot;&quot;&gt;
      &lt;source src=&quot;/images/phaser-waves/waves01.mp4&quot; type=&quot;video/mp4&quot; /&gt;
      &lt;source src=&quot;/images/phaser-waves/waves01.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;/video&gt;
    &lt;figcaption&gt;See the full code &lt;a href=&quot;https://github.com/cfurrow/phaser-wave-example/tree/waves01&quot;&gt;here&lt;/a&gt;&lt;/figcaption&gt;
    &lt;/figure&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;To move each wave up and down gradually, I use Javascript’s &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.sin&lt;/code&gt; function in my &lt;code class=&quot;highlighter-rouge&quot;&gt;update&lt;/code&gt; function that gets called once per frame:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ... snip&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animateWaves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ... snip&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;animateWaves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// this.count increments every frame. gives us a constantly&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// increasing X value for our sin function&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentWave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;currentWave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Giving &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.sin&lt;/code&gt; an x-value, outputs a y-value at that x. As x increases, the y value oscillates up and down. If you were to plot these y values for every x value from 0 to 10, let’s say, you’d see a wave-like pattern emerge. This is obviously perfect for what we are trying to accomplish here!&lt;/p&gt;

&lt;p&gt;In our case, we give &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.sin&lt;/code&gt; and x-value that is composed of two things: the current wave’s number, &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; and a counter (&lt;code class=&quot;highlighter-rouge&quot;&gt;this.count&lt;/code&gt;) that increments by 0.1 every time a frame is drawn to the screen (30-60 times per second!). After getting the y-value out of &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.sin(x)&lt;/code&gt;, we multiply that value by 5 to increase the height (amplitude) of the wave. If we did not multiple, we’d have very tiny wave motions and I wanted the waves to appear to be large and rolling.&lt;/p&gt;

&lt;h2 id=&quot;boat-and-waves-should-collide&quot;&gt;Boat and waves should collide&lt;/h2&gt;
&lt;p&gt;Now that the waves are moving, we need a way to collide them with a boat. Phaser has built-in physics that can handle this by creating a “physics body” for each element that needs to interact with the physics engine. In our case, since the boat, and each wave are going to collide, that means all of those elements will need a physics body attached to it. By default, the physics body is square and is most often referred to as a “hit box”. But, for our purposes, I thought I’d try to use a circle, and you’ll see why in a little bit.&lt;/p&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;small-12 small-centered medium-6 medium-centered column&quot;&gt;
    &lt;figure&gt;
    &lt;video width=&quot;100%&quot; autoplay=&quot;&quot; loop=&quot;&quot; preload=&quot;&quot;&gt;
      &lt;source src=&quot;/images/phaser-waves/waves02.mp4&quot; type=&quot;video/mp4&quot; /&gt;
      &lt;source src=&quot;/images/phaser-waves/waves02.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;/video&gt;
    &lt;figcaption&gt;Full code &lt;a href=&quot;https://github.com/cfurrow/phaser-wave-example/tree/waves02&quot;&gt;here.&lt;/a&gt;&lt;/figcaption&gt;
    &lt;/figure&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The code:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numWaves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waveLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Pick a random wave frame (0, or 1) from the 'wave' graphic&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sprite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'wave'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Let's setup the anchor to the center of the wave sprite&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;anchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;smoothed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// randomize the circle size to vary the motion of anything&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// that collides with this wave&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCircle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;between&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;140&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// offset the wave slightly below the top of the sprite&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// do not allow other objects to &quot;push&quot; this sprite.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// simply collide&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;immovable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’ve highlighted the physics bodies (green) in Phaser to show the boat and waves colliding. Once we add some velocity to the boat, it will collide with each circle it meets, giving its path an irregular shape, almost as if it were riding up and down the slope of a wave. That’s why using a circle physics body on the boat and all of the waves works better in this instance.&lt;/p&gt;

&lt;h2 id=&quot;motion&quot;&gt;Motion!&lt;/h2&gt;
&lt;p&gt;In order to make this more interesting, the boat needs to move and when the boat moves, the waves need to “shift” to the left adding new waves off the right side of the screen, and disappearing waves off the left side as they go out of view. This is how we’ll create an “infinite” sea for the boat to explore. As its velocity moves it to the right, we’ll constantly swap in new wave tiles so it always has something to sail on.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;physics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arcade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;velocity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Constantly move boat to the right&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animateWaves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;small-12 small-centered medium-6 medium-centered column&quot;&gt;
    &lt;figure&gt;
    &lt;video width=&quot;100%&quot; autoplay=&quot;&quot; loop=&quot;&quot; preload=&quot;&quot;&gt;
      &lt;source src=&quot;/images/phaser-waves/waves03.mp4&quot; type=&quot;video/mp4&quot; /&gt;
      &lt;source src=&quot;/images/phaser-waves/waves03.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;/video&gt;
    &lt;figcaption&gt;Full code &lt;a href=&quot;https://github.com/cfurrow/phaser-wave-example/tree/waves03&quot;&gt;here.&lt;/a&gt;&lt;/figcaption&gt;
    &lt;/figure&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, the boat eventually falls off the last wave, and off the screen. We need to implement the “infinite” part of this example, and continuously swap the left-most wave sprite to the right side of the screen, so the boat can never “fall off” the screen and to certain death below.&lt;/p&gt;

&lt;h3 id=&quot;how-to-i-swap-tiles&quot;&gt;How to I swap tiles?&lt;/h3&gt;

&lt;p&gt;On initialization of my scene, after creating each wave sprite, I set a few variables to keep track of where the first and last wave are in the group of waves. The idea is that these indexes will change as the sprite moves from right-to-left across the screen.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: At first I attempted to treat the array as a stack, and “pop off” the wave sprite that was “off the screen” on the left, and then insert it back on the top of the stack, placing it on the far right of the screen. This caused redraw problems, I think, because I would get a 20-50ms stutter every time I had to pop and push. That is how I came up with this index-tracking mechanism.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstWaveIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastWaveIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numWaves&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once per frame of animation, I take a look at the first and last wave in my group of wave sprites. If the first wave has fallen off the screen (it’s left-most x-position is less than the camera’s x-position), move the sprite to the far right by setting its new x-position just to the right of the current last wave sprite. Then, set the &lt;code class=&quot;highlighter-rouge&quot;&gt;lastWaveIndex&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;firstWaveIndex&lt;/code&gt;, since it was just pushed to the far right, and increment the &lt;code class=&quot;highlighter-rouge&quot;&gt;firstWaveIndex&lt;/code&gt; by 1 to make the now left-most wave sprite the “first” sprite. I also correct for if we increment the index and it’s greater than the number of waves we’re currently rendering. In that case, I set the &lt;code class=&quot;highlighter-rouge&quot;&gt;firstWaveIndex&lt;/code&gt; to 0 to “wrap-around” the index.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;shuffleLeftMostWave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Look at left-most this.waves.children only!&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// check if the current wave's right edge (in world coords)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// is less than the camera's left edge&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstWave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstWaveIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastWave&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastWaveIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstWave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstWave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;camera&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;newX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastWave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WAVE_LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;firstWave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastWaveIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstWaveIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstWaveIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numWaves&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstWaveIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstWaveIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’ve numbered each wave with its index, so you can see them repeat themselves after the 5th wave. There are only six waves total, numbered 0, through 5.&lt;/p&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;small-12 small-centered medium-6 medium-centered column&quot;&gt;
    &lt;figure&gt;
    &lt;video width=&quot;100%&quot; autoplay=&quot;&quot; loop=&quot;&quot; preload=&quot;&quot;&gt;
      &lt;source src=&quot;/images/phaser-waves/waves04.mp4&quot; type=&quot;video/mp4&quot; /&gt;
      &lt;source src=&quot;/images/phaser-waves/waves04.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;/video&gt;
    &lt;figcaption&gt;Full code &lt;a href=&quot;https://github.com/cfurrow/phaser-wave-example/tree/waves04&quot;&gt;here.&lt;/a&gt;&lt;/figcaption&gt;
    &lt;/figure&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;how-did-the-boat-move-endlessly&quot;&gt;How did the boat move “endlessly”?&lt;/h3&gt;
&lt;p&gt;The boat has a velocity on its x-axis that constantly propels it forward through the world. This particular game world is only 10,000 pixels wide, but again, I’m only using enough wave segments to fill the width of the screen. The camera is also fixed to the boat, so as it moves, the boat stays centered.&lt;/p&gt;

&lt;p&gt;An alternate way to “move” the boat would be to not give it a velocity at all, and experiment with simply moving the waves to the left, and the boat would naturally collide with the wave bodies and slide over them. I’d have to make sure the boat could not slide backwards and only move forward, and I’m not sure how easily that would be done.&lt;/p&gt;

&lt;p&gt;Additionally, I could keep the X-velocity on the boat, and then as the player got to a world X coordinate (say, 9,000 of 10,000 pixels), I could reset the player’s X position back to world-position 0, since the waves are fixed to the camera, and then the boat would be free to travel for another 9,000 pixels and never see the “end” of the world at 10,000 pixels. At this rate the world wouldn’t even have to be 10,000 pixels, but instead, just wide enough to fit the entire user’s viewport, plus some padding to the right, and then as the user got to the edge of this world length, reset them back to 0.&lt;/p&gt;

&lt;h2 id=&quot;end-result&quot;&gt;End Result&lt;/h2&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;small-12 small-centered medium-6 medium-centered column&quot;&gt;
    &lt;figure&gt;
    &lt;video width=&quot;100%&quot; autoplay=&quot;&quot; loop=&quot;&quot; preload=&quot;&quot;&gt;
      &lt;source src=&quot;/images/phaser-waves/phaser-wave.mp4&quot; type=&quot;video/mp4&quot; /&gt;
      &lt;source src=&quot;/images/phaser-waves/phaser-wave.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;/video&gt;
    &lt;figcaption&gt;Full code for final scene &lt;a href=&quot;https://github.com/cfurrow/phaser-wave-example/&quot;&gt;here.&lt;/a&gt;&lt;/figcaption&gt;
    &lt;/figure&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cfurrow.github.io/phaser-wave-example/&quot;&gt;Here is a live demo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Check out the repo here: &lt;a href=&quot;https://github.com/cfurrow/phaser-wave-example/&quot;&gt;https://github.com/cfurrow/phaser-wave-example/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Marxico (Evernote + Markdown)</title>
   <link href="http://cfurrow.github.io/note%20taking/2016/10/02/marxico-evernote-markdown"/>
   <updated>2016-10-02T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/note%20taking/2016/10/02/marxico-evernote-markdown</id>
   <content type="html">&lt;p&gt;After &lt;a href=&quot;https://cfurrow.github.io/note%20taking/2016/02/16/you-lost-me-evernote&quot;&gt;previously explaining&lt;/a&gt; how I had switched away from Evernote, I’ve been back for several months now, thanks to &lt;a href=&quot;http://marxi.co/&quot;&gt;Marxico&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/marxico-web-1.png&quot; alt=&quot;marxico window&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-is-marxico&quot;&gt;What is Marxico?&lt;/h3&gt;
&lt;p&gt;Marxico allows me to use my top-requested feature for Evernote that it currently lacks: Markdown! This app allows me to write notes in Markdown and then sync them to Evernote as rich-text (rendered markdown). I can write code blocks (with syntax highlighting), tables, lists, checkboxes, flow charts, and sequence diagrams without having to leave my note editor. You can even paste an image into the editor, and it’ll attach it to your note, and write the Markdown-specific image tag for you. It’s been a huge timesaver for me, and it kept me using Evernote which already stores thousands of notes that I’ve written over the last eight years or so.&lt;/p&gt;

&lt;p&gt;The app also performs all of this really well, and my guess is because it’s running on top of the excellent &lt;a href=&quot;http://electron.atom.io/&quot;&gt;Electron&lt;/a&gt; framework, which GitHub’s &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; editor is based on.&lt;/p&gt;

&lt;h3 id=&quot;any-complaints&quot;&gt;Any complaints?&lt;/h3&gt;
&lt;p&gt;I’ve been using Marxico since June of this year, so I’ve got about four months of use under my belt, and it has been completely worth the $16/yr for the app. No real complaint comes to mind with regard to the apps functionality or feature set.&lt;/p&gt;

&lt;p&gt;If you’re an Evernote user that would like to write your notes using Markdown, I urge you to try Marxico; it comes with a 10-day free trial.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://marxi.co/&quot;&gt;http://marxi.co/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>macOS Sierra: Killing my CPU</title>
   <link href="http://cfurrow.github.io/osx/2016/09/29/macos-sierra-killing-my-cpu"/>
   <updated>2016-09-29T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/osx/2016/09/29/macos-sierra-killing-my-cpu</id>
   <content type="html">&lt;p&gt;After upgrading to macOS Sierra last week, my 2012 Macbook Air was running at 200%+ CPU practically all day, every day.
Top offenders were:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#the-fix&quot;&gt;&lt;em&gt;TL;DR&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mds&lt;/li&gt;
  &lt;li&gt;mds_stores&lt;/li&gt;
  &lt;li&gt;mdworker&lt;/li&gt;
  &lt;li&gt;photolibraryd&lt;/li&gt;
  &lt;li&gt;photoanalysisd&lt;/li&gt;
  &lt;li&gt;CalNCService&lt;/li&gt;
  &lt;li&gt;CalendarAgent&lt;/li&gt;
  &lt;li&gt;soagent&lt;/li&gt;
  &lt;li&gt;accountsd&lt;/li&gt;
  &lt;li&gt;kernel_task&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each one of those, or groups of them, would take up 100-170% of my CPU power for themselves for hours on end. I’d even
leave my computer running overnight (thanks to &lt;a href=&quot;http://lightheadsw.com/caffeine/&quot;&gt;Caffeine&lt;/a&gt;) and I’d come back, 8 hours
later to the laptop fans still running high, and CPU pegged at 200%.&lt;/p&gt;

&lt;p&gt;I believe there was &lt;em&gt;some&lt;/em&gt; explanation for part of this high usage: I used iCloud Photos for a number of years, but almost a year
ago, I stopped auto-syncing photos to it, and tried to use Google Photos exclusively for storage, photo analysis, and
sharing. I was pretty happy with its feature set, and wished the Photos.app could do what Google Photos seemed to do in
stride. Then macOS Sierra was announced, and the new Photos.app features seemed to address my concerns, and I began to
dread the upcoming migration &lt;em&gt;back&lt;/em&gt; to Photos.app from Google Photos. What made that easier was &lt;a href=&quot;https://support.google.com/photos/answer/6156103?co=GENIE.Platform%3DDesktop&amp;amp;hl=en&amp;amp;oco=0&quot;&gt;setting up Google Drive to show
me my photos&lt;/a&gt;, and then download
the missing months of photos directly from there, and importing into Photos.app. That is why, I presume, phtolibraryd
and photoanalysisd were crunching hard through all 40,000+ photos in my library. I assume they were uploading new photos,
analyzing the contents of old photos/videos as far back as 2007, finding faces, trees, dogs, etc. But the other apps? WTF?&lt;/p&gt;

&lt;h1 id=&quot;the-fix-so-far&quot;&gt;The “fix” (so far)&lt;/h1&gt;
&lt;p&gt;&lt;a name=&quot;the-fix&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;photos&quot;&gt;Photos&lt;/h2&gt;
&lt;p&gt;As far as photolibraryd and photoanalysisd, I think I had to wait those out for the most part. They still run at over 100%
every now and then, but it’s not constant. It’s making progress, from what I can surmise from the “People” album. Each
time I click on it, the numbers of scanned vs unscanned change. I believe I’m going to have to wait this one out and
leave my laptop idling overnight so Photos can continue scanning faces, etc from photos and videos&lt;/p&gt;

&lt;image src=&quot;/assets/photos/2016.09.29-sierra/photos-face-scanning.svg&quot; width=&quot;100%&quot; /&gt;

&lt;h2 id=&quot;calendarcontacts&quot;&gt;Calendar/Contacts&lt;/h2&gt;
&lt;p&gt;I had a hunch that somehow my iCloud + Google contacts/calendars was bugged after the macOS upgrade. I did some searching
and I took the advice people gave from past OSX upgrades that also saw high cpu usage from contacts/calendar processes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new account on your Mac&lt;/li&gt;
  &lt;li&gt;Log out of your main Mac user&lt;/li&gt;
  &lt;li&gt;Log into the newly created account&lt;/li&gt;
  &lt;li&gt;Watch “Activity Monitor” for similar behavior (e.g. high cpu usage)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nothing happened. All processes were using relatively low CPU usage for over 20 minutes (&amp;lt;1%). That confirmed to me that
the problems were definitely user-account specific, and not a problem with macOS or my hardware. I logged out, and back
into my main account. From there, I did the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Opened up System Preferences -&amp;gt; Internet Accounts&lt;/li&gt;
  &lt;li&gt;Deleted all Google accounts I had listed (selected the account, and then pressed the minus button at the bottom of the list)&lt;/li&gt;
  &lt;li&gt;Unchecked “Mail”, “Contacts”, “Calendars”, “Reminders”, “Notes” from my iCloud account&lt;/li&gt;
  &lt;li&gt;Reboot&lt;/li&gt;
  &lt;li&gt;Go back to System Preferences -&amp;gt; Internet Accounts&lt;/li&gt;
  &lt;li&gt;Re-enable iCloud “Mail”, “Contacts”, “Calendars”, “Reminders”, “Notes”&lt;/li&gt;
  &lt;li&gt;Watch Activity Monitor for ~10minutes for high CPU usage (none came outside of photoanalysisd)&lt;/li&gt;
  &lt;li&gt;Re-add my Google accounts, one at a time, watching Activity Monitor between each add.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It seemed my high CPU usage was over, for the most part. Like I said, the Photos-related services spike usage every
now and then, but my fan has quieted down all day today.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>You lost me, Evernote</title>
   <link href="http://cfurrow.github.io/note%20taking/2016/02/16/you-lost-me-evernote"/>
   <updated>2016-02-16T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/note%20taking/2016/02/16/you-lost-me-evernote</id>
   <content type="html">&lt;p&gt;I did not see this coming. &lt;a href=&quot;/2015/01/25/how-i-evernote/&quot;&gt;I’m an Evernote fiend&lt;/a&gt;, a superuser, an evangelizer. Or, I was until a few weeks ago when I came across &lt;a href=&quot;http://happenapps.com/#quiver&quot;&gt;Quiver&lt;/a&gt;. Quiver is a Mac note-taking app that includes two features I’ve been waiting for Evernote to integrate for years:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The ability to drop in syntax-highlighted code natively&lt;/li&gt;
  &lt;li&gt;Markdown support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yeah, that simple. And Quiver handles the basics of Evernote like a champ:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Notebooks&lt;/li&gt;
  &lt;li&gt;Tags&lt;/li&gt;
  &lt;li&gt;Cloud-sync (through a service of your choice! Dropbox, iCloud Drive, Google Drive, etc)&lt;/li&gt;
  &lt;li&gt;Notebook sharing&lt;/li&gt;
  &lt;li&gt;Full-text search&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;code-blocks&quot;&gt;Code blocks&lt;/h4&gt;

&lt;p&gt;This feature alone was one I’ve been waiting for in Evernote for years and years. I’d worked out ways to make Evernote work for my purposes (indent code one level, use the &lt;a href=&quot;/2015/01/29/copy-code-from-atom-to-evernote/&quot;&gt;copy-as-rtf Atom plugin&lt;/a&gt;, etc). Quiver tackles this natively by dividing up your note into what it calls “cells”. Your note could have one cell, or hundreds of cells, it’s up to you and what you need. Each cell has a format:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rich text&lt;/li&gt;
  &lt;li&gt;code&lt;/li&gt;
  &lt;li&gt;LaTex&lt;/li&gt;
  &lt;li&gt;markdown&lt;/li&gt;
  &lt;li&gt;diagram&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is how you can write some text in one cell, create a new code cell then drop in some code, create a new text cell and continue writing text.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/photos/2016.02.16/quiver-example.png&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;/assets/photos/2016.02.16/quiver-example.png&quot; width=&quot;100%&quot; alt=&quot;Example of a text cell and a code cell&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each code cell can represent a different language, and display the syntax highlighting specific to that language. This feature is awesome as someone who finds necessity in writing daily dev diaries just for myself.&lt;/p&gt;

&lt;h4 id=&quot;markdown&quot;&gt;Markdown&lt;/h4&gt;

&lt;p&gt;Just like code cells, Quiver supports markdown cells. When you preview your note (by putting it in preview mode, from edit mode) you’ll see your markdown rendered into HTML. Here’s an example of the Quiver window split in two. The left side is the “edit” view, and the right side is the “preview” view. You can choose which mode you are in, between “edit”, “preview” or a split with both “edit” and “preview” displayed at the same time.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/photos/2016.02.16/quiver-example-2.png&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;/assets/photos/2016.02.16/quiver-example-2.png&quot; width=&quot;100%&quot; alt=&quot;Example of a markdown cell&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-does-quiver-lack&quot;&gt;What does Quiver lack?&lt;/h3&gt;

&lt;p&gt;There are a number of Evernote features that Quiver does not have, but of the features I actually care about, Quiver does not include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OCR, or Optical Character Recognition, when importing images/PDFs (an Evernote premium feature).
    &lt;ul&gt;
      &lt;li&gt;It cannot “read into” images or PDFs and pull out searchable text.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://evernote.com/webclipper/&quot;&gt;webclipper-like extension&lt;/a&gt; for browsers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They are not a deal-breaker, but they would be quite handy to seamlessly replace my Evernote workflow. In the meantime I’m getting used to annotating my attachments a bit more with keywords so I can easily find the attachments later on. And as far as web clipping goes, you can get pretty far by copying and pasting an entire page’s content into Quiver, but you will most-likely have to do some cleanup around removing unwanted elements, and dealing with missing CSS info inside your note. You can also copy and paste just the text of a website into Quiver, and do your own formatting after the fact. Takes a bit longer, but the note looks a lot nicer when you can control everything yourself.&lt;/p&gt;

&lt;h3 id=&quot;what-else-does-quiver-offer&quot;&gt;What else does Quiver offer?&lt;/h3&gt;

&lt;h4 id=&quot;diagrams&quot;&gt;Diagrams!&lt;/h4&gt;

&lt;p&gt;You can create flow and sequence diagrams right inside your note! I didn’t realize how much I wanted this feature until I had it in front of me.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/photos/2016.02.16/quiver-example-3.png&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;/assets/photos/2016.02.16/quiver-example-3.png&quot; width=&quot;100%&quot; alt=&quot;Example of a diagram cell&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Within the first day or so of using Quiver, I’d created a half-dozen diagrams for myself, and one to help clarify the flow of a new feature we were writing. It got everyone involved on the same page by translating the text of the story to a visual representation of the flow. It was found to be very helpful, and I made a few Quiver converts along the way.&lt;/p&gt;

&lt;h4 id=&quot;notes-stored-as-json&quot;&gt;Notes stored as JSON!&lt;/h4&gt;

&lt;p&gt;All of your notes are stored as JSON, not some proprietary or otherwise cumbersome format. It’s just JSON data.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/photos/2016.02.16/quiver-example-4.png&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;/assets/photos/2016.02.16/quiver-example-4.png&quot; width=&quot;100%&quot; alt=&quot;Example of a JSON data&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;importing-from-evernote&quot;&gt;Importing from Evernote!&lt;/h4&gt;

&lt;p&gt;As of version 3 of Quiver, you can now import your exported Evernote notes (*.enex) into Quiver, and it keeps your original dates, tags, and attachments. So nice!&lt;/p&gt;

&lt;h3 id=&quot;goodbye-evernote&quot;&gt;Goodbye, Evernote&lt;/h3&gt;

&lt;p&gt;As-is, Quiver accomplishes so much of what I loved about Evernote, and does more. If Quiver’s dev stopped supporting/upgrading Quiver right now, I’d be satisfied with the current feature set. But, I do not believe they are done improving the application yet, and I look forward to discovering more ways to love this app.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Why I always go back to Things</title>
   <link href="http://cfurrow.github.io/keeping%20organized/2016/01/19/things"/>
   <updated>2016-01-19T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/keeping%20organized/2016/01/19/things</id>
   <content type="html">&lt;h1 id=&quot;why-things&quot;&gt;Why Things?&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2016.01.19-things/thingslogo.png&quot; width=&quot;128px&quot; style=&quot;display: block; margin: 0 auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve tried a number of list management apps over the last ten years, but I always come back to &lt;a href=&quot;https://culturedcode.com/things/&quot;&gt;Cultured Code’s Things&lt;/a&gt; app. Things was the first task-list app I’d ever tried back in 2008 and while it has the simplicity and organization that I need, it’s not without fault.&lt;/p&gt;

&lt;h2 id=&quot;what-i-love&quot;&gt;What I Love&lt;/h2&gt;

&lt;p&gt;Below are a quick-hit list of things I really love about Things. Although, as I’ve found out while writing this all down, I have a love for the app that I cannot fully explain. Suffice it to say that I may just be bias or partial to Things because it works for me, and maybe it won’t work for you.&lt;/p&gt;

&lt;h3 id=&quot;keyboard-shortcuts&quot;&gt;Keyboard shortcuts&lt;/h3&gt;

&lt;p&gt;The shortcuts for Things have always been a huge draw for me.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Want to create a new task from anywhere? Press ⌘-Shift-Space&lt;/li&gt;
  &lt;li&gt;Want to set the current task as due today? Press ⌘-T&lt;/li&gt;
  &lt;li&gt;Want to reschedule the current task to tomorrow? Press ⌘-R, then press Return right away.&lt;/li&gt;
  &lt;li&gt;Want to reschedule the current task to five days from now? Press ⌘-R, 5, then press Return.&lt;/li&gt;
  &lt;li&gt;Press ⌘-. to mark the current task as completed.&lt;/li&gt;
  &lt;li&gt;Press ⌥-Del to mark the current task as canceled.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other apps I’ve tried also have decent keyboard shortcuts, but I’ve never found them to be quite as nice as Things.&lt;/p&gt;

&lt;h3 id=&quot;inbox-today-scheduled-next&quot;&gt;Inbox, Today, Scheduled, Next&lt;/h3&gt;

&lt;p&gt;Your tasks can be put in a variety of places, but for optimal Getting-Things-Done (GTD), &lt;a href=&quot;https://culturedcode.com/things/guide/&quot;&gt;you’ll want to follow the guide&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New tasks without a project go in your “Inbox”. Get it out of your head, and recorded here for later filing.&lt;/li&gt;
  &lt;li&gt;Tasks to complete today go in the “Today” area&lt;/li&gt;
  &lt;li&gt;See all tasks you have given due-dates in the “Scheduled” area.&lt;/li&gt;
  &lt;li&gt;Set up your next few days by putting tasks in your “Next” area.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the beginning of each day I attempt to go through my Inbox and my Next areas to file tasks, and determine which tasks I want to start today or which tasks I need to schedule for a future date. I may also push tasks into projects I’ve setup and give the tasks some tags so they are grouped logically.&lt;/p&gt;

&lt;p&gt;This system has worked well for me, and I still tinker with how many tasks I allow in my “Today” area, and which tasks I defer (reschedule) into “Next” or with a due date of the following day. I feel that this keeps me sane, and on task, coupled with &lt;a href=&quot;/2015/01/25/how-i-evernote/&quot;&gt;my extensive Evernote rituals.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This organization of tasks is not new, or unique to Things, but it is unique to most of the apps I’ve tried that typically sort by “Today” and “Projects” only. You may get lucky and get a “Scheduled” or week-view.&lt;/p&gt;

&lt;h3 id=&quot;rescheduling-on-desktop&quot;&gt;Rescheduling (on desktop)&lt;/h3&gt;
&lt;p&gt;I love the “re-schedule” flow on the Mac app. Hitting ⌘-R and setting a new due date for an task is wonderfully fast. This is perfect for tasks I didn’t complete today, but want to get to first thing tomorrow. While this works great on the desktop app, the process is not nearly as smooth on the mobile app. See &lt;a href=&quot;#things-wish-list&quot;&gt;my wish list&lt;/a&gt; at the end for a more detailed breakdown of this.&lt;/p&gt;

&lt;h2 id=&quot;other-apps-ive-tried&quot;&gt;Other apps I’ve tried&lt;/h2&gt;

&lt;p&gt;Like most things that I love, I’ve had to try a number of other competitors/rivals out there to figure out which app sits at the top. I do this with fitness trackers (potentially a future blog post), note-taking apps, and IDEs/code editors. I’ll highlight a little about each app attempting to target what I liked, and didn’t like, about each.&lt;/p&gt;

&lt;h3 id=&quot;microsoft-onenote&quot;&gt;&lt;a href=&quot;http://onenote.com&quot;&gt;Microsoft OneNote&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2016.01.19-things/onenote.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This was the very first to do list app I’d tried back in 2005. I created a single note for my week, and at the very top of the note was the master-list of tasks I wanted to complete that week–I’d add, remove and complete tasks constantly throughout the week. Below the list was all my notes from the week, broken up by large headings per day in descending order. As in “today’s” notes would be right under the list, and if you scrolled down further, you’d see yesterday’s notes, etc.&lt;/p&gt;

&lt;p&gt;This worked well for the most part. But the app was built to be so much more than just a to do list, which was nice, but when I wanted to add a task, I had to search/click through a few menus/projects to find the list I wanted, and then add to it. I want immediate access to my list and OneNote did not offer that. &lt;em&gt;Note: I have not tried the app since it has come out for OSX.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;evernote&quot;&gt;&lt;a href=&quot;http://evernote.com&quot;&gt;Evernote&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2016.01.19-things/evernote.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/2015/01/25/how-i-evernote/&quot;&gt;While I love Evernote for all things note-taking&lt;/a&gt;, I have the same complaints with it, as I do with Microsoft OneNote. The app is great for note management, but it is not great as to do list app. You have to navigate through the notes interface to even find your note that contains your list, and then you have to jump through a few small hoops to edit/create a list.&lt;/p&gt;

&lt;p&gt;Evernote comes with a Reminder feature, but I do not like that, either. You can mark an entire note as a Reminder, and set a date/time to be reminded and while that may be good as a one-off, it’s not ideal for list-making and managing.&lt;/p&gt;

&lt;h3 id=&quot;teuxdeux&quot;&gt;&lt;a href=&quot;https://teuxdeux.com/&quot;&gt;TeuxDeux&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2016.01.19-things/teuxdeux.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What &lt;a href=&quot;https://teuxdeux.com/&quot;&gt;TeuxDeux&lt;/a&gt; (“to do”) does really well is capacity-planning. The whole point of TeuxDeux is to see each of your days in a week, and what you’ve scheduled to do each day. Shifting between days and prioritizing is a breeze.&lt;/p&gt;

&lt;p&gt;My main complaints with TeuxDeux is task details. There isn’t a way to add much detail to a specific task with the limited space you get in the UI. That’s great for keeping things simple, short, to the point, but sometimes I need those details, and it’s not possible. I wouldn’t change TeuxDeux because of that as I think the app has a clear purpose and paradigm that doesn’t work for me, however. I want it to, but it doesn’t.&lt;/p&gt;

&lt;h3 id=&quot;todoist&quot;&gt;&lt;a href=&quot;https://en.todoist.com/&quot;&gt;Todoist&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2016.01.19-things/todoist.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://todoist.com&quot;&gt;Todoist&lt;/a&gt; is another go-to app I try when I think Things is not working for me at the moment. The app is full-featured, and contains features I wish Things had, like hierarchical tasks, comment list, etc. I recently ended a 9-month stint using Todoist to go back to Things, and this is what sparked this whole blog post. The problem I have is that I don’t really have any major complaints with Todoist, but I prefer the Things UI and the majority of their shortcuts. The flow is pretty similar between the two apps, but since I started with Things so long ago, I pine for its behavior, even with its flaws.&lt;/p&gt;

&lt;h3 id=&quot;wunderlist&quot;&gt;&lt;a href=&quot;https://www.wunderlist.com/&quot;&gt;Wunderlist&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2016.01.19-things/wunderlist.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.wunderlist.com/&quot;&gt;Wunderlist&lt;/a&gt; is a great, full-featured to do app that I try for long periods of time, but then give up and go back to Things. I don’t know what I find “wrong” with Wunderlist, as it has a lot of features that I wish Things had, but something about the flow, and perhaps the shortcuts, are not Things-like, and that is why I abandon it. The team behind Wunderlist is constantly updating the app, and adding new features across all platforms, which is awesome and is one of the reasons I fire the app back up every now and again to give it a go. But after a few weeks/months, I feel the pull back to Things, and abandon Wunderlist.&lt;/p&gt;

&lt;h3 id=&quot;clear&quot;&gt;&lt;a href=&quot;http://realmacsoftware.com/clear/&quot;&gt;Clear&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2016.01.19-things/clear.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I &lt;em&gt;love&lt;/em&gt; &lt;a href=&quot;http://realmacsoftware.com/clear/&quot;&gt;Clear&lt;/a&gt;. It’s simple, the swipes are intuitive, the visuals are delightful, and you can manage multiple lists/projects. But, for my needs, it’s &lt;em&gt;too&lt;/em&gt; simple. It has one way of organizing lists, and if it works for you, it really works. Every few months I try it out again to see if I can switch, but I’ve not been able to for more than a few days. I would need the ability to add more detail per task than what Clear offers at this time. But, that change would break it’s beautiful and terse UI, however. I don’t think it’s worth the trade off. It’s me, not you, Clear.&lt;/p&gt;

&lt;h2 id=&quot;things-wish-list&quot;&gt;Things Wish list&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://culturedcode.com/status/&quot;&gt;Things v3 is coming out soon-ish&lt;/a&gt; (maybe in 2016?), and I don’t know a single new feature that is inbound, but I’m hopeful for a few changes noted below.&lt;/p&gt;

&lt;h3 id=&quot;swiping&quot;&gt;Swiping!&lt;/h3&gt;
&lt;p&gt;Things was created before swiping became popular as a way to perform quick-actions on mobile. I would love it if the next version of Things on desktop and mobile had swipe abilities.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Swipe right to mark as complete&lt;/li&gt;
  &lt;li&gt;Swipe far right to cancel&lt;/li&gt;
  &lt;li&gt;Swipe left to push task to tomorrow&lt;/li&gt;
  &lt;li&gt;Swipe far left to push task to specific date (or move to ‘Someday’)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;comments--note-list&quot;&gt;Comments / Note list&lt;/h3&gt;
&lt;p&gt;While Things offers the ability to add notes to a single task, it is a single textbox. To add running notes to an task, means you have to come up with your own mechanism for this. I like adding notes as I go along, and having a timestamp of each note is helpful to me, so I add my own notes to each task, and add newlines underneath to look like a timeline. This works, but I’d prefer it if I could add notes or comments as separate items attached to a task, like &lt;a href=&quot;https://en.todoist.com/&quot;&gt;Todoist&lt;/a&gt; and &lt;a href=&quot;https://www.wunderlist.com/&quot;&gt;Wunderlist&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;hierarchical-tasks-or-in-place-projects&quot;&gt;Hierarchical tasks or in-place projects&lt;/h3&gt;
&lt;p&gt;A lot of work that I do is multi-stepped. And sometimes creating a new project in Things is “heavier” than I would like.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create the project, give it a name&lt;/li&gt;
  &lt;li&gt;(optional) Place it in an area of responsibility&lt;/li&gt;
  &lt;li&gt;(optional) Add due date information&lt;/li&gt;
  &lt;li&gt;Show in “Today” view&lt;/li&gt;
  &lt;li&gt;Add tasks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I’d rather do is be looking at a list of tasks, either in the Today view, or wherever I’m at, and then create a new task, and then add sub-tasks underneath it. If I were to complete the top-most task, it would mark all sub-tasks as completed, or, perhaps mark any unchecked tasks underneath as “canceled”.&lt;/p&gt;

&lt;h3 id=&quot;less-tapping-on-mobile&quot;&gt;Less tapping on mobile&lt;/h3&gt;
&lt;p&gt;Getting around on the mobile app is much more cumbersome than the desktop application. You have to “tap into” so many menus and sub-screens, it makes the whole process cumbersome.&lt;/p&gt;

&lt;p&gt;For example, to edit a due date and move something to tomorrow:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tap a task&lt;/li&gt;
  &lt;li&gt;Tap “Don’t show in Today”&lt;/li&gt;
  &lt;li&gt;Tap edit&lt;/li&gt;
  &lt;li&gt;Tap the date&lt;/li&gt;
  &lt;li&gt;Select a date&lt;/li&gt;
  &lt;li&gt;Tap save&lt;/li&gt;
  &lt;li&gt;Tap done&lt;/li&gt;
  &lt;li&gt;Tap the “back” button (top left)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Getting to your project list to see tasks therein is an equally frustrating ordeal. It is not smooth to go from one list (Today) to a project list. It will take about three taps, and sub-second waits for swipe animations, but trust me, after a while it feels quite laggy when you want to do a quick add or review.&lt;/p&gt;

&lt;h2 id=&quot;whats-your-favorite-why&quot;&gt;What’s your favorite? Why?&lt;/h2&gt;

&lt;p&gt;I’d love to hear about what to do app you love, and why. Perhaps I’ve overlooked a killer feature in an app listed above? Perhaps I’ve missed a killer to do app that I really must try. Let me know by sending me a link.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Anagram Problem</title>
   <link href="http://cfurrow.github.io/coding%20challenge/2015/04/15/anagram"/>
   <updated>2015-04-15T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/coding%20challenge/2015/04/15/anagram</id>
   <content type="html">&lt;p&gt;Taken from &lt;a href=&quot;http://nafiulis.me/the-deceptive-anagram-question.html&quot;&gt;http://nafiulis.me/the-deceptive-anagram-question.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Given a list of words L, find all the anagrams in L in the order in which they appear in L.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;The word list:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[“pool”, “loco”, “cool”, “stain”, “satin”, “pretty”, “nice”, “loop”]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The output should be, in &lt;em&gt;exactly&lt;/em&gt; this order:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[“pool”, “loco”, “cool”, “stain”, “satin”, “loop”]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;I started reading the above post when I thought I should stop reading and try it
myself. I too, started with a very naive approach that was looping over the list
in exponential time. Gross.&lt;/p&gt;

&lt;p&gt;As I read more, he said the interviewer suggested getting it to O(N) time by using
a hash map. I stopped reading once more, and went back to my half-baked problem.&lt;/p&gt;

&lt;p&gt;I came up with something that processes the output as it’s reading words in. It’s
still rough, but it doesn’t loop back over the list of words, which is nice.&lt;/p&gt;

&lt;h3 id=&quot;step-1-read-in-the-words-remembering-their-place-in-the-original-string&quot;&gt;Step 1: Read in the words, remembering their place in the original string&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each_with_index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ... more to come ...&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-2-create-a-hash-of-the-word-that-will-map-similar-words-to-the-same-hash&quot;&gt;Step 2: Create a hash of the word that will map similar words to the same hash&lt;/h3&gt;

&lt;p&gt;I figured I’d create a hash of a word that took each letter, and the count of each
letter as it appeared in the word, the sort the letters and place the count next to it.&lt;/p&gt;

&lt;p&gt;Example: The word “cool” would become “c1l1o2” since “c” and “l” only appear once,
and “o” appears twice. That would also map “loco” to the same hash. Nice.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hash_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Why did I choose this hash method?&lt;/strong&gt;&lt;/em&gt; It seemed right at the time and I originally
thought it would save space. Upon reading more of the original blog post, Nafiul
ends up creating a hash of a word by sorting the letters alphabetically, which
is much faster/nicer. I’m keeping my hashing function as-is for full-disclosure.&lt;/p&gt;

&lt;h3 id=&quot;step-3-as-each-word-is-read-in-create-the-hash-and-store-the-word-in-the-set-of-hashes&quot;&gt;Step 3: As each word is read in, create the hash, and store the word in the set of hashes.&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each_with_index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Default the word_set for hash to an empty array&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Append the word, plus its place in the original string&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ... more to come ...&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, when I add the word to the hash map of words, I append it as
the word, plus its original place in line. I’ll use that later when constructing
the output.&lt;/p&gt;

&lt;h3 id=&quot;step-4-build-the-output-string&quot;&gt;Step 4: Build the output string&lt;/h3&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrap_word_with_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unwrap_word_and_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/(\w+):(\d+)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Initialize an array the same size as the word_list, fill with nils&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each_with_index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap_word_with_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# If there are at least 2 words in the set, we have something worth outputting&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unwrap_word_and_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Place the word in it's original index/placement of the original string&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Get rid of those pesky nils&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;does-it-work&quot;&gt;Does it work?&lt;/h2&gt;

&lt;p&gt;Yes, it does. It’s still a hot mess. Problems I see are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;My “word:index” &lt;em&gt;works&lt;/em&gt;, but I’m not in love with it. That value has to be stored &lt;em&gt;somewhere&lt;/em&gt;, so alongside the word is probably fine, but, it feels messy. I could just do an &lt;code class=&quot;highlighter-rouge&quot;&gt;.index_of&lt;/code&gt; lookup on the original &lt;code class=&quot;highlighter-rouge&quot;&gt;word_list&lt;/code&gt;, but that’s technically a scan of the original word list, which would happen for every word I’m going to output.&lt;/li&gt;
  &lt;li&gt;My hashing-function is a bit verbose/overkill when sorting the letters of a word would also work. I’m keeping the original here.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;full-code&quot;&gt;Full code&lt;/h2&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w(pool loco cool stain satin pretty nice loop)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=== Anagram Finder ===&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Original list: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hash_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrap_word_with_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unwrap_word_and_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/(\w+):(\d+)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each_with_index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap_word_with_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unwrap_word_and_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Place the word in it's original index/placement of the original string&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Processed list: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; Processed list: pool loco cool stain satin loop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-about-a-refactor&quot;&gt;How about a refactor?&lt;/h2&gt;
&lt;p&gt;Knowing what I know now, and seeing the problems, let’s do some refactoring.&lt;/p&gt;

&lt;h3 id=&quot;hashing-function&quot;&gt;Hashing function&lt;/h3&gt;
&lt;p&gt;Let’s first simplify the function to do a letter-sort. It now becomes much shorter:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hash_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wow, I’m embarrassed.&lt;/p&gt;

&lt;h3 id=&quot;wrapunwrap-functions&quot;&gt;Wrap/Unwrap functions&lt;/h3&gt;
&lt;p&gt;Why didn’t I just use a hash, or an array?&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# No need for an unwrap function now, this is simple.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Heck, even this function seems overkill, now.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrap_word_with_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ... snip ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word_index&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# it's in the format I need already! how quaint&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Place the word in it's original index/placement of the original string&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;embarassment++&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;refactored-full-code&quot;&gt;Refactored full code&lt;/h2&gt;

&lt;p&gt;Now that the code is cleaner/leaner, here’s the full dump:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w(pool loco cool stain satin pretty nice loop)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=== Anagram Finder ===&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Original list: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hash_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrap_word_with_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each_with_index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hash_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap_word_with_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;word_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word_index&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Processed list: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yeesh, that looks a lot better. Live, code and learn.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Added a second layer to the treadmill desk</title>
   <link href="http://cfurrow.github.io/health/2015/03/03/second-tier-treadmill-desk"/>
   <updated>2015-03-03T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/health/2015/03/03/second-tier-treadmill-desk</id>
   <content type="html">&lt;p&gt;
  &lt;img alt=&quot;desk&quot; width=&quot;100%&quot; src=&quot;/assets/photos/2015-03-02-desk-second-tier.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Decided to upgrade my desk, and add some additional height for the keyboard and mouse
so it’s more ergonomic. I needed about six more inches of height and the
big box hard store delivered with these nice (and pricey) unfinished wooden legs.&lt;/p&gt;

&lt;p&gt;I drilled four holes into the four corners of the new shelf board, and threaded
the legs into it with their built-in screws.&lt;/p&gt;

&lt;p&gt;With these legs, the overall price of the desk went up considerably.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Before legs: $15.34&lt;/li&gt;
  &lt;li&gt;After legs: $56.29&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m still way under the average treadmill desk price of ~$1500. The overall total
including the cost of the &lt;a href=&quot;http://www.amazon.com/gp/product/B0048HS02G/&quot;&gt;treadmill I purchased&lt;/a&gt;
is now at $565.29.&lt;/p&gt;

&lt;h2 id=&quot;materials&quot;&gt;Materials&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;36”x12”x1” pine shelf board =&amp;gt; $8.94&lt;/li&gt;
  &lt;li&gt;(4) 5x1.25x1.25” legs =&amp;gt; $8 per leg&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Turned my treadmill into a desk for $15.34</title>
   <link href="http://cfurrow.github.io/health/2015/02/22/treadmill-desk"/>
   <updated>2015-02-22T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/health/2015/02/22/treadmill-desk</id>
   <content type="html">&lt;h2 id=&quot;finished-product&quot;&gt;Finished Product&lt;/h2&gt;

&lt;p&gt;
&lt;img width=&quot;100%&quot; src=&quot;/assets/photos/2015.02.22-treadmill/2015-02-22 14.56.59.jpg&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;img width=&quot;100%&quot; src=&quot;/assets/photos/2015.02.22-treadmill/2015-02-22 14.57.26.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;materials&quot;&gt;Materials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;36”x12”x1” pine shelf board =&amp;gt; $8.94&lt;/li&gt;
  &lt;li&gt;4x Screws Eyes 1 5/8” =&amp;gt; $3.92&lt;/li&gt;
  &lt;li&gt;Two 36” bungie cords =&amp;gt; $2.48&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All totaled, this desk plus &lt;a href=&quot;http://www.amazon.com/gp/product/B0048HS02G/&quot;&gt;my existing treadmill&lt;/a&gt;
puts the cost of this treadmill desk at $524.34. Not too bad.&lt;/p&gt;

&lt;h2 id=&quot;step-1-drill-them-holes&quot;&gt;Step 1: Drill them holes&lt;/h2&gt;

&lt;p&gt;I used a 3/16” drill bit, and bore 4 holes, two on each end, of the shelf board.&lt;/p&gt;

&lt;h2 id=&quot;step-2-screw-them-eyes&quot;&gt;Step 2: Screw them eyes&lt;/h2&gt;

&lt;p&gt;I then took my screw eyes, and screwed them in, one to each hole I just drilled.&lt;/p&gt;

&lt;h2 id=&quot;step-3-strap-it-in&quot;&gt;Step 3: Strap it in&lt;/h2&gt;

&lt;p&gt;I layed the board over the treadmill’s arms, then attached the bungie cords to the opposite site.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Game Developer Diary - Part 1: Tools</title>
   <link href="http://cfurrow.github.io/game%20development/2015/02/08/game-developer-diary-part-1"/>
   <updated>2015-02-08T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/game%20development/2015/02/08/game-developer-diary-part-1</id>
   <content type="html">&lt;h1 id=&quot;phaserjs&quot;&gt;Phaser.js&lt;/h1&gt;

&lt;p&gt;I’ve decided to pick away at building a game again, but first I needed to decide
on the framework. I’ve been a fan of the &lt;a href=&quot;http://www.pixijs.com/&quot;&gt;Pixi.js&lt;/a&gt; renderer
for a long time, and had been hoping to use it somehow. With that, I’d been
following the progress of the &lt;a href=&quot;http://phaser.io/&quot;&gt;Phaser.js&lt;/a&gt; game framework,
that uses Pixi.js as the renderer, so it became a no-brainer to use.&lt;/p&gt;

&lt;p&gt;Phaser comes with some awesome docs that you can download locally if you clone
their repo. I also grabbed &lt;a href=&quot;http://www.photonstorm.com/phaser/tutorial-making-your-first-phaser-game&quot;&gt;a “getting started” tutorial&lt;/a&gt;
that sets you up with the basics to create a simple platform game. It introduces
you to the basics of loading assets, creating animation sets, simple physics,
player-input handling, and collision detection.&lt;/p&gt;

&lt;p&gt;It’s a great tutorial to get you started towards your first game, and it’s ripe for modification. I
started by trying to add additional frames of animation to the player character
so that he moved in some way while in his “idle” state. Adding additional frames
to the sprite sheet was more difficult than I wanted it to be–I had to align
things just right, give each frame of animation it’s own 32x48 pixels of space.
I felt like I just wasn’t “getting” something. Then I decided I needed a tool.&lt;/p&gt;

&lt;h1 id=&quot;first-tool-psd-to-sprite-creator&quot;&gt;First tool: PSD to Sprite Creator&lt;/h1&gt;

&lt;p&gt;I realized quickly that I’d want to be able to create my animations in
Photoshop in a way that Phaser.js could natively use. Phaser can load a sprite
sheet of frames, set side-by-side, equidistant from each other. Like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/demo/gamedev-diary-1/assets/dude-combined.png&quot; alt=&quot;example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My Photoshop skills are not awesome, so creating a gridded sprite sheet like that
seemed like more work than I was willing to bite off right now. What I &lt;em&gt;really&lt;/em&gt;
wanted to do was to create a 32x48 pixel canvas in photoshop, and create each
frame of animation as a layer, one on top of the other. Then export those layers
into a single file, like the one seen above.&lt;/p&gt;

&lt;p&gt;I did a tiny bit of Googling before realizing I’d like to try my hand at creating
that tool myself. And the &lt;a href=&quot;https://github.com/cfurrow/psd_to_sprite&quot;&gt;psd_to_sprite&lt;/a&gt;
gem was created.&lt;/p&gt;

&lt;p&gt;I could now automate creating these sprites via a Rake task:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:make_sprites&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assets/dude.psd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Processing &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;...&quot;&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;PsdToSprite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SpriteMaker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Done!&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My first tool is now complete. And I can continue making assets, and dropping them
into some Phaser.js examples.&lt;/p&gt;

&lt;p&gt;Now the standing animation is the little dude moving up and down:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2015.02.08-dude-combined.gif&quot; alt=&quot;example&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;play&quot;&gt;Play!&lt;/h1&gt;

&lt;iframe src=&quot;/assets/demo/gamedev-diary-1&quot; width=&quot;700px&quot; height=&quot;600px&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
</content>
 </entry>
 
 <entry>
   <title>Copy code from Atom to Evernote</title>
   <link href="http://cfurrow.github.io/note%20taking/2015/01/29/copy-code-from-atom-to-evernote"/>
   <updated>2015-01-29T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/note%20taking/2015/01/29/copy-code-from-atom-to-evernote</id>
   <content type="html">&lt;p&gt;Just found this &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; package, &lt;a href=&quot;https://atom.io/packages/copy-as-rtf&quot;&gt;copy-as-rtf&lt;/a&gt;
that adds the ability to copy code out of Atom in RTF (rich text format), which
you can then paste into Evernote for some syntax highlighting.&lt;/p&gt;

&lt;h2 id=&quot;how-to-use&quot;&gt;How to use&lt;/h2&gt;

&lt;h3 id=&quot;1-install-copy-as-rtf-in-the-atom-install-packages-screen-under-your-atom-preferences&quot;&gt;1. Install copy-as-rtf in the atom “Install Packages” screen under your Atom preferences.&lt;/h3&gt;

&lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;/assets/photos/2015.01.29-atom-install-packages.png&quot; alt=&quot;Install Packages Screen&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-select-some-code-you-want-to-copy-into-evernote-and-press-r-to-copy-the-code-as-rtf&quot;&gt;2. Select some code you want to copy into Evernote, and press ⌘+⌥+R to copy the code as RTF&lt;/h3&gt;

&lt;h3 id=&quot;3-open-evernote-and-paste-i-like-to-indent-the-code-at-least-one-time-via-&quot;&gt;3. Open Evernote, and paste. I like to indent the code at least one time via ⌘+⇧+]&lt;/h3&gt;

&lt;p&gt;Done!&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;100%&quot; src=&quot;/assets/photos/2015.01.29-evernote-syntax-highlight.png&quot; alt=&quot;Evernote example&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How I Evernote</title>
   <link href="http://cfurrow.github.io/note%20taking/2015/01/25/how-i-evernote"/>
   <updated>2015-01-25T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/note%20taking/2015/01/25/how-i-evernote</id>
   <content type="html">&lt;p&gt;Evernote is a tool I reach for every single day to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Keep daily dev journals&lt;/li&gt;
  &lt;li&gt;Jot down phone call notes&lt;/li&gt;
  &lt;li&gt;Create grocery lists&lt;/li&gt;
  &lt;li&gt;Save articles and web pages for later offline reference&lt;/li&gt;
  &lt;li&gt;Store recipes&lt;/li&gt;
  &lt;li&gt;Keep a food journal&lt;/li&gt;
  &lt;li&gt;Store screenshots (via &lt;a href=&quot;http://evernote.com/skitch&quot;&gt;Skitch&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I feel like I’m constantly telling others how I use it, and how it’s benefited
me, so I thought I might as well try to capture a bit of what I tell people.&lt;/p&gt;

&lt;h1 id=&quot;notebooks-and-tags&quot;&gt;Notebooks and Tags&lt;/h1&gt;

&lt;p&gt;I separate notes into some high-level notebooks:&lt;/p&gt;

&lt;h3 id=&quot;inbox&quot;&gt;Inbox&lt;/h3&gt;
&lt;p&gt;For newly created, and “unfiled” notes. If it’s in the inbox, something
needs to be done with the note still. Tag it, move it to another notebook, or
add more information to it.&lt;/p&gt;

&lt;h3 id=&quot;recipes&quot;&gt;Recipes&lt;/h3&gt;
&lt;p&gt;Obvious&lt;/p&gt;

&lt;h3 id=&quot;work&quot;&gt;Work&lt;/h3&gt;
&lt;p&gt;Here is where I keep my daily dev journals that are work-related. I
create a new note for each day, title it by the date (e.g. 2015.01.22), and
timestamp my progress throughout the day, which I’ll get into in the next section.&lt;/p&gt;

&lt;p&gt;What I worked on, questions I had for myself, or to ask otehrs, how I solved
a problem, code snippets, screenshots – whatever it takes to sufficiently
document my day, for a few reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;So I won’t forget what I did each day.&lt;/li&gt;
  &lt;li&gt;This builds a nice reference library that I invariably reference in the future.
    &lt;ol&gt;
      &lt;li&gt;“How did I find that special-case user?”&lt;/li&gt;
      &lt;li&gt;“What was that unix command to search all the production logs over the last 5 minutes?”&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;filed&quot;&gt;Filed&lt;/h3&gt;
&lt;p&gt;All notes that don’t end up in another notebook, but are no longer
in the inbox, are put here. Usually with tags to help identify what it was. For
example I use the “call” tag for any phone call I made, and documented the
conversation here.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Sample call note
Calling Comcast. Hate their automated system.
Got to a person, Linda.
She's nice. Needs my acct info again?
Says I have two accounts with them?
Closing duplicate account now.
Back to single billing address.
Old acct number: xxxxx
&quot;New&quot; acct number: xxxxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;food&quot;&gt;Food&lt;/h3&gt;
&lt;p&gt;I use &lt;a href=&quot;https://evernote.com/food/&quot;&gt;Evernote’s Food app&lt;/a&gt;, and all food journaling from there, ends
up here.&lt;/p&gt;

&lt;h1 id=&quot;timestamp-and-other-macros&quot;&gt;Timestamp and Other Macros&lt;/h1&gt;

&lt;p&gt;I love to timestamp my notes as I go along, especially my daily dev journals. An
example:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[9:05 AM]&lt;/p&gt;

  &lt;p&gt;Got a late start, wasn’t feeling well.
Checking emails.
Need to check on that script I ran last night. Rob says it went fine. Let’s verify counts.&lt;/p&gt;

  &lt;p&gt;[10:30 AM]&lt;/p&gt;

  &lt;p&gt;Counts were fine, moved on to story #1910. I think I still need to add some logic
to fetch the assessment data now that I know what that will look like. Let’s
do that now.&lt;/p&gt;

  &lt;p&gt;[11:01 AM]&lt;/p&gt;

  &lt;p&gt;Just got off the phone with Matt: &lt;a href=&quot;#&quot;&gt;2015-01-2015: Call with Matt&lt;/a&gt; (this is a link to another Evernote note)&lt;/p&gt;

  &lt;p&gt;Where was I? Oh yeah, #1910 is looking better, but was waiting on the CI to finish
building my latest code changes.&lt;/p&gt;

  &lt;p&gt;11:10 AM Passed! Moving on.&lt;/p&gt;

  &lt;p&gt;[12:30 PM]&lt;/p&gt;

  &lt;p&gt;Just got back from lunch. More emails. Seems like there may be a history bug?
12:35 PM Only affecting one user? 65512344 is the id. Gonna drop into a rails console&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; u = User.find(65512344)
#=&amp;gt; &amp;lt;User....snip&amp;gt;
&amp;gt; u.history.map(&amp;amp;:id)
#=&amp;gt; [9909331, 9901031, nil]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;What? nil? How is that even possible? Time to do some spelunking in the history code again.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;“Writing all those manual timestamps is stupid and tedious.” Yeah, I’d agree with
you if it weren’t for apps like &lt;a href=&quot;http://smilesoftware.com/TextExpander/index.html&quot;&gt;TextExpander&lt;/a&gt;
or &lt;a href=&quot;https://www.trankynam.com/atext/&quot;&gt;aText&lt;/a&gt;. What either of those apps allow me
to do is setup a series of macros that I can run by typing some keys. For instance,
whenever I type “/etime” it replaces that text, and “expands” it to be “[current time]&lt;Press Enter=&quot;&quot;&gt;&quot;,
so it creates something like:&lt;/Press&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[8:01 PM]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can type as fast as you want, so if I was on a roll, I could type “/etime
Just got back from lunch, checking email”, it would immediately expand it to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[8:04 PM]&lt;/p&gt;

  &lt;p&gt;Just got back from lunch, checking email&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I use that style of macro to delineate either the start of the day, or long time
passing between my last notes, or, perhaps the start of a new “topic” in my notes.
If I’m working on a single problem, but it’s taking a non-trivial amount of time,
I use my “inline” time method, which takes the current time, and drops it into
Evernote, without pressing the “Enter” key at the end. So when I type: “ttime Still
checking rollbar for more instances of that error” as soon as I hit the space between
“ttime” and “Still”, it changes “ttime” to “8:03 PM” so the line would look like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;8:03 PM Still checking rollbar for more instances of that error&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So handy!&lt;/p&gt;

&lt;p&gt;I was a long-time TextExpander user until I saw aText hit the scene a few years
ago. The price tag was far-far lower than TextExpander, and it seemed to meet my
basic needs, so I grabbed it, and haven’t looked back.&lt;/p&gt;

&lt;p&gt;I have a number of other handy macros in aText that I use all day:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;ddate&lt;/strong&gt; Expands to 2015.01.22 (the current date)&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;dtime&lt;/strong&gt; Expands to 1/22/15 8:07 PM (the current date and time)&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;llamashiptit&lt;/strong&gt; Expands to &lt;img src=&quot;http://i.imgur.com/w2BE81V.png&quot; alt=&quot;llama&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;llamascii&lt;/strong&gt; Expands to:&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;,
~)
(_---;
/|~|\
/ / /|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;Evernote has some built-in keyboard shortcuts to output date and time, but I’ve
gotten so used to just typing out these “words” that I can’t see why I’d change
that up. Plus, I have more needs than just date, and time, as you can
see. I think I’ve got somewhere on the order of 30-40 macros setup, not all for
Evernote.&lt;/p&gt;

&lt;h1 id=&quot;code-snippets--quotes&quot;&gt;Code snippets / Quotes&lt;/h1&gt;

&lt;p&gt;I don’t have a perfect solution for this yet, but I tend to drop lots of code,
or snippets into Evernote. The best way I do this is to shift the text/code right
by using Cmd+Shift+}. It doesn’t use spaces, but tabs or some other form of indentation.
It’s a manual process.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Paste code into Evernote&lt;/li&gt;
  &lt;li&gt;Highlight the code or quote&lt;/li&gt;
  &lt;li&gt;Cmd+Shift+}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’d really love some kind of prettifier inside of Evernote to syntax highlight
that indented code, but, it does not exist yet, to my knowledge.&lt;/p&gt;

&lt;p&gt;I also drop lines from log files into Evernote in this way, as it helps mark my
notes, from other content I may have grabbed from elsewhere.&lt;/p&gt;

&lt;h1 id=&quot;wishlist&quot;&gt;Wishlist&lt;/h1&gt;

&lt;p&gt;I’ve made Evernote a part of my daily routine for years now (over 6,500 notes since
2008), but there are still a few things I wish it had.&lt;/p&gt;

&lt;h3 id=&quot;markdown-support&quot;&gt;Markdown support&lt;/h3&gt;

&lt;p&gt;Would &lt;em&gt;love&lt;/em&gt; to be able to write in Markdown, and have it give me the option to
“view rendered”, or “view markdown” to format notes by sections, and headings, etc,
in the fastest way possible, which is to just keep typing.&lt;/p&gt;

&lt;h3 id=&quot;syntax-highlighting&quot;&gt;Syntax highlighting&lt;/h3&gt;

&lt;p&gt;For code, etc. Like &lt;a href=&quot;https://gist.github.com/&quot;&gt;GitHub’s gist&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;table-creation&quot;&gt;Table creation&lt;/h3&gt;

&lt;p&gt;Or, a simple way to create a table. Sometimes I just need to put things in tabular form, and Evernote does not make that easy or fluid.
Microsoft’s OneNote did this by letting you type some text, pressing “Tab” (I think), and it created a table cell around your first bit of text, and creates an empty cell for you to type into immediately. You can keep pressing “Tab” to add more cells to a row. If you pressed “Enter”, it creates a new table row, and let’s you start the process over again. If you press “Enter Enter”, it exits out
of table mode.&lt;/p&gt;

&lt;h1 id=&quot;let-me-know-if-youve-got-more-tips&quot;&gt;Let me know if you’ve got more tips!&lt;/h1&gt;

&lt;p&gt;Hopefully that was somewhat helpful, and you’ve found a new tidbit of information
to take back to your own productivity toolbelt. I’m always on the lookout for
new ways to enhance how I work, so if you’ve got any, drop me a tweet &lt;a href=&quot;http://twitter.com/carl_furrow&quot;&gt;@carl_furrow&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>I'm a rookie</title>
   <link href="http://cfurrow.github.io/professional%20growth/2015/01/20/im-a-rookie"/>
   <updated>2015-01-20T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/professional%20growth/2015/01/20/im-a-rookie</id>
   <content type="html">&lt;p&gt;A colleague sent around an article today, &lt;a href=&quot;http://firstround.com/article/Execute-Like-a-Rookie-Lead-Like-a-Multiplier&quot;&gt;Execute Like a Rookie, Lead Like a Multiplier&lt;/a&gt;, and a number of points really resonated with me. &lt;a href=&quot;http://thewisemangroup.com/about/our-team/&quot;&gt;Liz Wiseman’s&lt;/a&gt; many years of research and experience found that “perpetual rookies” tend to outperform their peers for fields requiring “specialized knowledge.”&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Rookies are a lot faster than people with experience because they are desperate and uncomfortable. When we get comfortable, that’s when we start to teach and mentor other people.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An interesting thought. I often find myself in an uncomfortable state, such as when I walk into a room, I immediately slot myself at the bottom of the intellectual totem pole without any real evidence to back the action. I think it’s a technique I subconsciously use to socialize and more easily relate with others. I listen more intently, and am generally more curious than if I think I have more to say than they.&lt;/p&gt;

&lt;p&gt;Wiseman goes on to list a few attributes of those she’s identified as “rookies”:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;They are risk mitigators, not risk takers.&lt;/strong&gt; They learn how to operate in thin slices, test, and de-risk their progress.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;They are never satisfied.&lt;/strong&gt; “There’s an abhorrence of mediocrity that they share.”&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;They are curious.&lt;/strong&gt; They always want to learn about everything, even if it’s not related to their job or immediate challenges&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;They are humble.&lt;/strong&gt; “I don’t mean in the sense of low self-esteem. I mean willing to learn from anyone and everyone no matter where they are in the hierarchy.”&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;They are playful.&lt;/strong&gt; “It’s not like they try to create fun amid the work. For them, their work is just fun.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I certainly can relate to a number of those. But it also feels like anyone in the software industry should also follow these tenants, but experience proves to me that this is not the rule.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I don’t like committing to work without understanding the scope, or at least setting aside research time for “spikes” and maybe even writing some failing specs as a roadmap.&lt;/li&gt;
  &lt;li&gt;I am never satisfied with the speed of how my code performs. Micro-optimizations are where I like to spend my free-time, but I know when to give it a rest and just “ship”.&lt;/li&gt;
  &lt;li&gt;Curious? Hard &lt;strong&gt;not&lt;/strong&gt; to be! Not enough time in a day to learn all I want to learn.&lt;/li&gt;
  &lt;li&gt;I’m probalby the most humble person on the planet! Possibly the entire universe!&lt;/li&gt;
  &lt;li&gt;I feel very grateful that my work &lt;em&gt;is&lt;/em&gt; fun. The challege to solve problems through software is more rewarding than I could have imagined when I started back at the age of twelve. I cannot fully appreciate what I would have been doing &lt;a href=&quot;/about/#where-it-all-started&quot;&gt;had it not been for that Apple ][e&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve always attributed these feelings as a lack of confidence on my part, but Wiseman’s research gives me a different angle to interpret my actions. Ironically, or maybe not so ironically, I still do not believe I will change my actions. I’ll still walk upon a group of peers and think everybody knows more than me, and I’m further behind in my understanding of my craft than everyone else, but, I suppose that’s what makes me “hungry” to know more, and do better. Striving for constant improvement because I feel like I’m perpetually catching up.&lt;/p&gt;

&lt;p&gt;More than anything, it’s nice to know I’m not alone in being a rookie.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Chrome broken when resetting your account password w/ 2-factor on.</title>
   <link href="http://cfurrow.github.io/browser/2015/01/14/google-chrome-password-reset-broken"/>
   <updated>2015-01-14T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/browser/2015/01/14/google-chrome-password-reset-broken</id>
   <content type="html">&lt;p&gt;Since this has happened twice in the last two-weeks, I thought I’d write it up.&lt;/p&gt;

&lt;h2 id=&quot;scenario&quot;&gt;Scenario&lt;/h2&gt;

&lt;p&gt;Your company has a password-expiration policy, along with a mandatory two-factor
authentication policy for all Google App users. Great! That’s secure, plus, I
use 1Password, so I never have to remember long, complicated passwords, and the
&lt;a href=&quot;https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0CB4QFjAA&amp;amp;url=https%3A%2F%2Fitunes.apple.com%2Fus%2Fapp%2Fgoogle-authenticator%2Fid388497605%3Fmt%3D8&amp;amp;ei=cbO2VNvzOdH-yQSJ1YCgAg&amp;amp;usg=AFQjCNErUPztKxmJDKqKeQmLJa5xoTdRCw&amp;amp;sig2=k8j55FUVK7Fx7A-g8ZAjCQ&amp;amp;bvm=bv.83640239,d.aWw&quot;&gt;Google Authenticator&lt;/a&gt;
iOS app makes storing all my two-factor codes in one place a breeze!&lt;/p&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;p&gt;Google Chrome is a complete failure.&lt;/p&gt;

&lt;p&gt;When the above scenario happens, and I have to change my password for my account,
I get a little warning in Google Chrome that I have to sign-in again to link
my browser to my Google Apps account, and sync history, bookmarks, etc. I attempt
to do so by entering in my email, plus my brand-spanking-new password, click the
button and… nothing. The sign-in dialog goes away, and I’m still not logged in.
I try again, then again, then again. I think, “Oh, maybe since I have two-factor
on, I need to use an app-specific password. No problem!” I try that, still nothing.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;Sign out of Google by going to your browser settings, and clicking “Disconnect
your Google Account”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2015.01.14/disconnect-chrome.png&quot; width=&quot;670&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then you have to sign back in once it closes your browser window, and start all
over. While the process does not take long, the mere fact that it exists as the
“solution” is very tiresome, having had to do it twice in as many weeks due to a
mixup in the “password reset” schedule.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Destroying OSX Calendar Zombie Invites</title>
   <link href="http://cfurrow.github.io/calendar/2014/10/06/destroy-osx-calendar-zombie-invites"/>
   <updated>2014-10-06T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/calendar/2014/10/06/destroy-osx-calendar-zombie-invites</id>
   <content type="html">&lt;p&gt;A large reason why I don’t use OSX’s Calendar app is because every time I open it, I have 100+ calendar invites staring me in the face. I’ve already accepted/rejected these invites through Google Calendar, but Calendar doesn’t care. I really enjoy the native interface of Calendar, but that kind of “digital zit” drives me crazy! There was no way to delete/ignore them through the app, so I looked for another solution.&lt;/p&gt;

&lt;p&gt;I opened up my terminal, and went hunting, and that’s when I came across this file:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/Library/Calendars/Calendar Cache&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I closed down the Calendar app, then deleted that sucker right away, and hoped for the best (&lt;code class=&quot;highlighter-rouge&quot;&gt;rm ~/Library/Calendars/Calendar\ Cache&lt;/code&gt;). After opening the Calendar app again, it crashed right away. Ugh! I tried opening the app once more, and I was presented with a dialog that said “Updating Calendars” with a progress bar. Once it was done, Calendar was working again, and I had 0 invites pending!&lt;/p&gt;

&lt;p&gt;Brute force, FTW.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Budget App</title>
   <link href="http://cfurrow.github.io/app%20development/2014/10/02/budget-app"/>
   <updated>2014-10-02T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/app%20development/2014/10/02/budget-app</id>
   <content type="html">&lt;p&gt;I spend a lot of money on “micro transactions” every month. iTunes, Amazon, Playstation, etc. Each one is usually less than $20 a piece, so it never &lt;em&gt;seems&lt;/em&gt; like I’m spending much money, but collectively it adds up quickly as you might expect if you’ve ever done math.&lt;/p&gt;

&lt;p&gt;I was challenged by my lovely wife, Emily, to curb that trend of micro spending, and try to spend less than $1000 over the next 3 months left in the year. “Easy!” I thought, “I’ll just whip up a Google Spreadsheet and track my spending!” A few problems quickly arose:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It’s ugly&lt;/li&gt;
  &lt;li&gt;It’s possible to track on the go via their mobile app, but it’s clumsy&lt;/li&gt;
  &lt;li&gt;I’m an engineer, why not reinvent the wheel?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was that last point that really stuck with me. I &lt;em&gt;am&lt;/em&gt; an engineer! Why not just build something?! As I sat down, and fired up Xcode I asked myself, “Shouldn’t you at least look to see if there is an app that already does what you need? Also, you don’t know how to use Xcode.” I was right again.&lt;/p&gt;

&lt;p&gt;I opened up the App Store and went looking. I downloaded five apps or so, and tried them all out over the next few hours, but none of them were simple. None of them did one thing well. So I went and grabbed a piece of paper, and drew this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2014.10.02-budged/sketch.jpg&quot; width=&quot;670&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It was simple:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;current balance at the top&lt;/li&gt;
  &lt;li&gt;grouped list of all purchases&lt;/li&gt;
  &lt;li&gt;a way to create new purchases&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I fired up Xcode again, and was quickly reminded that I still don’t know what I’m doing there, and I wanted to get my idea coded fast, so I went with what I know. Even though it was a lot of overhead, I created a new Rails 4 app and figured I could iterate over it as I went on. Rails is a great fast-prototyping tool with all of it’s magic and conventions.&lt;/p&gt;

&lt;p&gt;Within an hour I had this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2014.10.02-budged/budgedv1.png&quot; width=&quot;670&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It had all the pieces I needed for a v1.0. So I shipped it off to Heroku.&lt;/p&gt;

&lt;p&gt;Since then I’ve spent more time on it and have added more features and refinements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Twitter Bootstrap (responsive design, what?)&lt;/li&gt;
  &lt;li&gt;Facebook Auth (via devise/omniauth)&lt;/li&gt;
  &lt;li&gt;jQuery Datepicker&lt;/li&gt;
  &lt;li&gt;Colorized debits/credits (with monthly grouping)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2014.10.02-budged/budgedv3.png&quot; width=&quot;670&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All in all I’m pretty happy with where I’ve gotten in the amount of time I’d put into it. There are more refinements that I have planned: Backbone or Angular front-end, in-line editing/creating, tagging purchases, but they can wait now that the app actually works well, and I can use it at a desktop or on my phone.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The skyline problem</title>
   <link href="http://cfurrow.github.io/coding%20challenge/2014/09/02/the-skyline-problem"/>
   <updated>2014-09-02T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/coding%20challenge/2014/09/02/the-skyline-problem</id>
   <content type="html">&lt;p&gt;I read the problem statement from &lt;a href=&quot;https://briangordon.github.io/2014/08/the-skyline-problem.html&quot;&gt;Brian Gordon’s blog&lt;/a&gt;,
and thought I’d give it a shot without reading any further.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You are given a set of n rectangles in no particular order.
They have varying widths and heights, but their bottom edges are
collinear, so that they look like buildings on a skyline.
For each rectangle, you’re given the x position of the left edge,
the x position of the right edge, and the height. Your task is to draw an
outline around the set of rectangles so that you can see what the skyline
would look like when silhouetted at night.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/skyline/The_skyline_problem.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;progress&quot;&gt;Progress&lt;/h2&gt;

&lt;p&gt;I’ve started out with this data and will work from there:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;na&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;350&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;450&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;450&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;650&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;900&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cfurrow/skyline.js&quot;&gt;Code is in my skyline.js repo.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;my-current-output&quot;&gt;My current output:&lt;/h2&gt;

&lt;h3 id=&quot;trial-1&quot;&gt;Trial 1&lt;/h3&gt;
&lt;p&gt;This was just a straight “draw to canvas” trial.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/skyline/skyline_trial1.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;trial-2&quot;&gt;Trial 2&lt;/h3&gt;
&lt;p&gt;This one uses the canvas &lt;code class=&quot;highlighter-rouge&quot;&gt;globalCompositeOperation&lt;/code&gt; to merge the shapes into one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/skyline/skyline_trial2.png&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Photo Organization with Dropbox and iPhoto</title>
   <link href="http://cfurrow.github.io/photos/2014/03/01/photo-organization-with-dropbox-and-iphoto"/>
   <updated>2014-03-01T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/photos/2014/03/01/photo-organization-with-dropbox-and-iphoto</id>
   <content type="html">&lt;p&gt;I’ve been trying out &lt;a href=&quot;/photos/2013/12/04/dropbox-photo-organizer&quot;&gt;my latest Dropbox-only solution&lt;/a&gt; for a while now,
and while it’s been working, I still pine for the polish and nicities
of iPhoto, such as face-detection, location mapping, and custom meta-events.
I thought of ways I could have fun building those features into some
Rails-backed website, but it just didn’t &lt;em&gt;feel&lt;/em&gt; right when there was already
software that could do it for me (iPhoto).&lt;/p&gt;

&lt;p&gt;Talking with my wife, &lt;a href=&quot;http://emilysf.com&quot;&gt;Emily&lt;/a&gt;, she said she recently
began creating simplified, over-arching events in iPhoto, such as “2014 - botanical gardens”.
That way, all pictures that she took over 2014 would be date-sorted, and filed in this
event. It sounded great! No need to look through separate months or days of folders. I wanted
that simplicity, but it meant modifying my current Dropbox flow.&lt;/p&gt;

&lt;p&gt;The things that were most important to keep for me:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Dropbox-backed storage&lt;/li&gt;
  &lt;li&gt;Photo sharing through Dropbox&lt;/li&gt;
  &lt;li&gt;Simple/understandable folder structure by year/month, etc&lt;/li&gt;
  &lt;li&gt;Fast browsing/previewing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then it hit me: &lt;a href=&quot;http://support.apple.com/kb/PH2505&quot;&gt;I could create multiple libraries in iPhoto&lt;/a&gt;, one for each year to cut
down on the slowness I’d experienced in the past when using iPhoto and having thousands
of photos across 8+ years. Ok, that solves #4 problem. Additionally, I realized you can
setup iPhoto to use an existing folder structure when importing photos, versus the default
setting which copies imported photos into iPhoto’s own internal folder setup (which I hated).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photos/2014.03.01-iphoto setting.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Great! That solves 1-3!&lt;/p&gt;

&lt;p&gt;My new photo workflow looks like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Take a photo on the iPhone&lt;/li&gt;
  &lt;li&gt;Let dropbox auto-sync to my Dropbox/Camera Uploads folder&lt;/li&gt;
  &lt;li&gt;My &lt;a href=&quot;https://github.com/cfurrow/photo_organizer&quot;&gt;photo_organizer&lt;/a&gt; script picks up the new file, and sorts it by year/month into a folder&lt;/li&gt;
  &lt;li&gt;I open iPhoto, and drag in the month-folder that has new photos in it
    &lt;ol&gt;
      &lt;li&gt;iPhoto automatically detects if a photo has already been imported, so you can safely ignore those.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Use iPhoto’s events to sort photos into events at-will.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As usual, I’m going to try this out for a few months, and see how it works.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Dropbox Photo Organizer</title>
   <link href="http://cfurrow.github.io/photos/2013/12/04/dropbox-photo-organizer"/>
   <updated>2013-12-04T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/photos/2013/12/04/dropbox-photo-organizer</id>
   <content type="html">&lt;p&gt;Ever since &lt;a href=&quot;http://www.cultofmac.com/253339/everpix-has-gone-what-the-hell-can-we-use-to-replace-it/&quot;&gt;Everpix&lt;/a&gt; was shut down, I’d been searching for a replacement
to store, and share photos. I was using a hybrid solution of managing
photos locally in iPhoto, and then letting Everpix upload those events/photos
to the cloud. Then to share it, I’d simple go to Everpix’s site, and share
the event. Simple! Sadly, that ended when they closed their virtual doors.&lt;/p&gt;

&lt;p&gt;I was back to just using iPhoto, and was getting tired with how hard it was
to share photos now. iCloud was not the solution was hoping for. Dropbox was
nice, but it required me to copy photos out of my iPhoto library file structure
and into a Dropbox folder somewhere, then share that folder. Tedious.&lt;/p&gt;

&lt;p&gt;I thought that maybe giving up iPhoto altogether wouldn’t be a horrible idea–
it was getting slower with all my photos inside it, and its file organization
was a mystery–it made more sense for the computer, than I. I wished it was
organizing by “year/month/day”.&lt;/p&gt;

&lt;p&gt;Thinking I could script my way into using just Dropbox for a bit, I created
&lt;a href=&quot;https://github.com/cfurrow/photo_organizer&quot;&gt;photo_organizer&lt;/a&gt;. It’s a little
script that can listen for photos to be inserted into your Dropbox’s “Camera Uploads”
directory, and then sort them into another photo by “year/month” (I gave up on ‘day’).&lt;/p&gt;

&lt;p&gt;My workflow became something like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Take a photo on the iPhone&lt;/li&gt;
  &lt;li&gt;Let dropbox auto-upload the new photo to it’s “Camera Uploads” directory&lt;/li&gt;
  &lt;li&gt;My personal computer would notice the incoming photo being downloaded from Dropbox, then run “photo_organizer” on it.&lt;/li&gt;
  &lt;li&gt;The photo would get moved out of “Camera Uploads”, and moved into my “Dropbox/Photos/year/month” folder.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Worked great! I could then come back to the Dropbox Photos folder, and organize photos into
sub-folders for events, etc (“Dropbox/Photos/2013/12/holiday party/”).&lt;/p&gt;

&lt;p&gt;I think I’ll give this a try for a bit, and see how it goes.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fast Tests Remove Testing Barriers</title>
   <link href="http://cfurrow.github.io/testing/2013/11/04/fast-tests-remove-testing-barriers"/>
   <updated>2013-11-04T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/testing/2013/11/04/fast-tests-remove-testing-barriers</id>
   <content type="html">&lt;p&gt;Check out my guest-post I did for Solano Labs: &lt;a href=&quot;http://blog.tddium.com/2013/11/04/fast-tests-remove-testing-barriers/&quot;&gt;Fast Tests Remove Testing Barriers&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>DOM Futures vs Custom Events</title>
   <link href="http://cfurrow.github.io/javascript/2013/04/22/dom-futures-vs-custom-events"/>
   <updated>2013-04-22T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/javascript/2013/04/22/dom-futures-vs-custom-events</id>
   <content type="html">&lt;p&gt;Maybe I just don’t get it yet, but it seems like the interest around “DOM
Futures” (e.g. promises) is growing, and is becoming a proposed spec for
future javascript engines. What DOM Futures is is another way to handle
asynchronous flow in your javascript apps. Currently you can use nested
callbacks, which are probably the most common, or you can use custom events
(like Backbone, jQuery, or any other publish/subscribe framework).&lt;/p&gt;

&lt;p&gt;While I see that DOM Futures / Promises could cut down on lines of code, I’m
not sure what else it truly gives me as a developer. But, I may not fully grok
it yet.&lt;/p&gt;

&lt;p&gt;I’ve put together two examples of a ficticious javascript app that needs to
get a user’s posts via ajax. Below you’ll see each example via DOM Futures and
via custom events.&lt;/p&gt;

&lt;p&gt;What am I missing?&lt;/p&gt;

&lt;h2 id=&quot;dom-futures&quot;&gt;DOM Futures&lt;/h2&gt;

&lt;p&gt;From the WHATWG spec. This example makes a JSON ajax request, and then returns
a promise object that has the “.done()” method on it, that will asynchronously
call one of two callbacks depending on the response of the json call.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fetchJSON(&quot;/user/posts&quot;).done(showPosts, showFailcat)

function fetchJSON(url){
    // create json request, wrap in a promiseObject
    return promiseObject;
}

function postsSuccess(data){
}

function showPosts(data) {
    postsSuccess(data);
    //...
}

function showFailcat(error){
    //...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;custom-events&quot;&gt;Custom Events&lt;/h2&gt;

&lt;p&gt;A similar example using some custom event framework, that attaches/subscribes
using “on()” and triggers/publishes to an event using “trigger()”.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$.getJSON(&quot;/usr/posts&quot;,onPostsSuccess,onPostsError)

function onPostsSuccess(data){
    // let's just say we have two events we want fired
    trigger(&quot;posts:success&quot;,data);
    trigger(&quot;posts:show&quot;,data);
}

function onPostsError(error) { trigger(&quot;posts:error&quot;,error); }

function postsSuccess(posts){
}

function postsShow(posts){
}

on(&quot;posts:success&quot;,postsSuccss);
on(&quot;posts:success&quot;,postsShow);

function postsError(error){
}
on(&quot;posts:error&quot;,postsError);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Working at Lumosity</title>
   <link href="http://cfurrow.github.io/lumosity/2013/04/15/working-at-lumosity"/>
   <updated>2013-04-15T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/lumosity/2013/04/15/working-at-lumosity</id>
   <content type="html">&lt;p&gt;Starting today, I am now a senior engineer at &lt;a href=&quot;http://lumosity.com&quot;&gt;Lumosity&lt;/a&gt;.
They’re a Rails shop, with a ton of awesome talent working there. I’m excited
to be solving problems with them.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How I removed friction in running my tests locally</title>
   <link href="http://cfurrow.github.io/testing/2013/04/02/how-i-removed-friction-in-running-my-tests-locally"/>
   <updated>2013-04-02T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/testing/2013/04/02/how-i-removed-friction-in-running-my-tests-locally</id>
   <content type="html">&lt;h3 id=&quot;problem-sometimes-i-forget-to-run-tests-before-deploying-to-staging-oops&quot;&gt;Problem: Sometimes I forget to run tests before deploying to staging (oops)&lt;/h3&gt;

&lt;p&gt;Yes, “bad dev!” indeed. In the midst of quick-fire releases, sometimes my own
standards for due-dilegence falls through the cracks. The friction comes with
my having to remember to run all my tests before pushing code off my machine,
and to a shared environment (git repo, staging build server).&lt;/p&gt;

&lt;p&gt;What I am good at remembering to do is to commit the smallest possible changes
to my local git feature branch. Because I makes mistakes, and the easier it is
to isolate those changes/mistakes, the easier it is to cherry-pick them away,
or create a fixing commit.&lt;/p&gt;

&lt;h3 id=&quot;solution-remove-the-friction-and-bring-the-continuous-integration-locally&quot;&gt;Solution: Remove the friction and bring the continuous integration locally&lt;/h3&gt;

&lt;p&gt;Continuous Integration (CI) / Continuous Delivery (CD) are a must-have for
your company’s projects to take away the hassles of running tests, bundling
and deploying your code to their production or staging endpoints/servers.&lt;/p&gt;

&lt;p&gt;Because of my commit small hunks, and commit often, I decided to install a CI
server locally that listened to all my local commits across all branches, and
then build the code, run all the unit tests and deploy the app locally for UI
testing.&lt;/p&gt;

&lt;p&gt;Now, I can be sure that all my changes have not broken any existing test, and
I can keep plugging away while the server handles the rest.&lt;/p&gt;

&lt;p&gt;On a multi-monitor setup my main display is for coding, and my secondary is
for watching the build server alerts and refreshing the locally-deployed site
in a browser.&lt;/p&gt;

&lt;p&gt;I’ve found having this configuration and workflow actually helps enforce good
practice. Knowing that each commit fires a build keeps me doing it in small
amounts, and I get the added benefit of tests and deployments while I keep my
mind in the context of the problem.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Penguin pixel art</title>
   <link href="http://cfurrow.github.io/pixelart/2013/02/26/penguin-pixel-art"/>
   <updated>2013-02-26T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/pixelart/2013/02/26/penguin-pixel-art</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/photos/2013-02-26/penguin.gif&quot; /&gt;
&lt;img src=&quot;/assets/photos/2013-02-26/dog.png&quot; /&gt;&lt;img src=&quot;/assets/photos/2013-02-26/penguin01.png&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Alien pixel art</title>
   <link href="http://cfurrow.github.io/pixelart/2013/02/26/alien-pixel-art"/>
   <updated>2013-02-26T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/pixelart/2013/02/26/alien-pixel-art</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/photos/2013-02-26-alien.png&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Happy Valentine's Day</title>
   <link href="http://cfurrow.github.io/pixelart/2013/02/14/happy-valentines"/>
   <updated>2013-02-14T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/pixelart/2013/02/14/happy-valentines</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/photos/2013-02-14-happy-valentines.gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I love &lt;em&gt;you&lt;/em&gt;, Emily.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Periphery.js: HTML5 Canvas + Maths!</title>
   <link href="http://cfurrow.github.io/html5/2012/12/30/periphery"/>
   <updated>2012-12-30T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/html5/2012/12/30/periphery</id>
   <content type="html">&lt;div id=&quot;demo&quot; style=&quot;margin: 0 auto; width: 800px;&quot;&gt;
  &lt;canvas width=&quot;800&quot; height=&quot;500&quot; id=&quot;c&quot;&gt;&lt;/canvas&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/assets/demo/periphery.min.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cfurrow/periphery.js&quot;&gt;Source on github&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;what&quot;&gt;What?&lt;/h3&gt;

&lt;p&gt;This project demos HTML5 Canvas 2D and clipping objects with other objects. In
this case, it’s clipping other scene elements with an emulation of the
player’s view-field cone. You can rotate your vision with the left/right keys,
and move in the direction you’re facing with the up key, or move in the
opposite direction with the down key.&lt;/p&gt;

&lt;p&gt;It’s a proof of concept, and a chance to dust off the parts of my brain that
used to know things about geometry and 2D math. I still daydream of creating a
game in the browser, and starting from the ground up (e.g. reinventing the
wheel) is how I learn best. A few years ago I heard it described as: “Don’t
hire someone for a job you haven’t already done yourself.” That’s how I feel
about frameworks most of the time. I want to go through the pain of re-
learning low-level stuff, then work my way forward to something easier.&lt;/p&gt;

&lt;h3 id=&quot;did-you-learn-anything&quot;&gt;Did you learn anything?&lt;/h3&gt;

&lt;p&gt;Yes, a lot! Mainly that I’ve disappointed my high school geometry teacher
(sorry Mr. Metzger!). Simple things like solving triangles, re-learning the
law of sines, etc. Makes a person humble, that’s for sure. It came back to me
in trickles, and I tried my hardest to figure the math out myself before
running to Google.&lt;/p&gt;

&lt;p&gt;The next hardest part was figuring out a canvas context’s &lt;code class=&quot;highlighter-rouge&quot;&gt;.clip()&lt;/code&gt; method and
how to combine it with &lt;code class=&quot;highlighter-rouge&quot;&gt;.save()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;.restore()&lt;/code&gt; for what I need. I cover that a
bit here so others can learn from my struggles.&lt;/p&gt;

&lt;h3 id=&quot;clip-save-and-restore&quot;&gt;.clip(), .save() and .restore()&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;context.clip()&lt;/code&gt; is like &lt;code class=&quot;highlighter-rouge&quot;&gt;context.fill()&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;context.stroke()&lt;/code&gt; but instead of
painting a shape or lines to the canvas, it “hides” anything that doesn’t fall
within that shape. So only intersecting elements that fall within that
clipping shape are seen.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/samples/canvas-tutorial/6_2_canvas_clipping.html&quot;&gt;See an example of this on MDN.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I knew I would need to use clip() to only show items that fell within the
visual range of the “player”. Things falling outside of that would not be
rendered. This could simulate a top-down representation of a person’s visual
field.&lt;/p&gt;

&lt;p&gt;Here’s the code I ended up with:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drawPeripheryVision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(20,20,20,0.9)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;periphery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;periphery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visionRadius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visionRadius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;periphery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visionRadius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visionRadius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;periphery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drawCentralVision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rgba(200,200,200,0.9)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;central&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;central&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visionRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visionRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;central&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visionRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visionRadius&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;central&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trianglePointY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drawPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#ffffff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#5e9fd2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;globalCompositeOperation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;drawPeripheryVision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;globalCompositeOperation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;drawCentralVision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clearRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;handleMovement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;drawPlayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;drawScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You’ll see that in &lt;code class=&quot;highlighter-rouge&quot;&gt;drawPeripheryVision()&lt;/code&gt;
and &lt;code class=&quot;highlighter-rouge&quot;&gt;drawCentralVision()&lt;/code&gt; I create the triangular vision fields, then I fill
them with color, then use the same shape to clip the rest of the canvas
falling outside those triangles away.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;drawPlayer()&lt;/code&gt; then puts it all together, creating the central player circle,
plus the vision fields. You’ll also see my use of the
&lt;code class=&quot;highlighter-rouge&quot;&gt;globalCompositeOperation=’xor’&lt;/code&gt;, [see this link for details on that](https://developer.mozilla.org/samples/canvas-tutorial/6_1_canvas_composite.html.
Then, after
the peripheral triangle is drawn, I save the canvas state, draw the central
vision (and clip), then restore the canvas. If I don’t do this, then the
peripheral-triangle’s “xor” does not get applied, but instead, it is
overwritten. By calling .restore(), I re-instate that effect to let the
objects that fall within the peripheral clipping shape to show, but be darker
(xor’d with the color of my periphery triangle).&lt;/p&gt;

&lt;p&gt;I do a similar technique in the &lt;code class=&quot;highlighter-rouge&quot;&gt;frame()&lt;/code&gt; function. I save the state of the
entire canvas, then draw the player and the scene with all their clipping and
composite changes, then restore the canvas. If I did not save/restore on each
frame() call, the first clipping path of the periphery would stick, and not
move as the player rotated their vision around.&lt;/p&gt;

&lt;h3 id=&quot;moving-in-the-direction-you-are-facing&quot;&gt;Moving in the direction you are facing&lt;/h3&gt;

&lt;p&gt;I used &lt;code class=&quot;highlighter-rouge&quot;&gt;document.onkeydown&lt;/code&gt; to capture all keyboard events, and I used &lt;code class=&quot;highlighter-rouge&quot;&gt;onkeydown&lt;/code&gt;
so that if a user holds a direction I keep moving until that key comes up.&lt;/p&gt;

&lt;p&gt;Here’s the code for my &lt;code class=&quot;highlighter-rouge&quot;&gt;onkeydown&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;onkeyup&lt;/code&gt; handlers:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onkeydown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movingForward&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movingBack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movingBack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movingForward&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;37&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;turningLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;turningRight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;turningRight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;turningLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// don't bubble event&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onkeyup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movingForward&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movingBack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;37&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;turningLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;turningRight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// don't bubble event&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;The movement variable was so that the app would “swallow” all keys I deemed as
part of the movement system. Up, Down, Left and Right. Those keys would not
bubble up to the browser and try to scroll the page around. This also allowed
me to be able to press &lt;code class=&quot;highlighter-rouge&quot;&gt;Command+R&lt;/code&gt; to refresh the page, and those keys were
allowed to bubble up to the browser.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;e.which&lt;/code&gt; statements are not cross
browser, but they work fine for Chrome/Firefox. Additionally, you’ll see
&lt;code class=&quot;highlighter-rouge&quot;&gt;player.turningRight&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;player.movingDown&lt;/code&gt; booleans. They stay set as long as
the key is held down, so that on each pass of the main loop, the player is
moving smoothly through each frame.&lt;/li&gt;
  &lt;li&gt;Like I mentioned above, returning
&lt;code class=&quot;highlighter-rouge&quot;&gt;!movement&lt;/code&gt; returns ‘false’ when a movement key was pressed, and therefore, the
event doesn’t bubble up.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The code that moves the player is below. It is called
each time the game loops:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleMovement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movingForward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;velocity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;velocity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movingBack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;velocity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;velocity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;turningRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;velocity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;turningLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;direction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deg2rad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;velocity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;player&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;requestanimationframe&quot;&gt;RequestAnimationFrame&lt;/h3&gt;

&lt;p&gt;As is customary with canvas animation, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;requestAnimationFrame()&lt;/code&gt; versus
&lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout()&lt;/code&gt; to call my main &lt;code class=&quot;highlighter-rouge&quot;&gt;frame()&lt;/code&gt; function each time the scene needed to be
redrawn. Nothing special there.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Calendar + OSX Calendars "400" error</title>
   <link href="http://cfurrow.github.io/calendar/2012/12/03/google-calendar-osx-calendar-400-error"/>
   <updated>2012-12-03T00:00:00-05:00</updated>
   <id>http://cfurrow.github.io/calendar/2012/12/03/google-calendar-osx-calendar-400-error</id>
   <content type="html">&lt;h3 id=&quot;problem&quot;&gt;Problem&lt;/h3&gt;

&lt;p&gt;I use Fantastical on Mountain Lion, which grabs data from Google Calendars.
I’ve been having an issue happening more and more lately where I add an event
via Fantastical, then add an invitee. Later, Calendar opens up with an alert:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The server responded with “400” to operation
CalDAVWriteEntityQueueableOperation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A few Google searches later, I finally found a workaround.&lt;/p&gt;

&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;

&lt;p&gt;Source: &lt;a href=&quot;https://discussions.apple.com/message/19040873#19040873&quot;&gt;discussions.apple.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I went to Calendar preferences and switched to my Google account and changed
all alert types to anything but “None”. Closed the window, and it seemed to
work.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Creating an animated GIF from multiple JPEGS (osx)</title>
   <link href="http://cfurrow.github.io/osx/2012/11/04/create-gif"/>
   <updated>2012-11-04T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/osx/2012/11/04/create-gif</id>
   <content type="html">&lt;h3 id=&quot;requirements&quot;&gt;Requirements&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imagemagick.org/script/index.php&quot;&gt;ImageMagick&lt;/a&gt;
I use &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;homebrew&lt;/a&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install imagemagick&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.lcdf.org/gifsicle/&quot;&gt;gifcicle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install gifcicle&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;open-up-a-terminal-to-the-folder-with-the-jpgs&quot;&gt;Open up a terminal to the folder with the jpgs.&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Note, they should be in the frame-order you want them to animate with, so
number them ascending. 1.jpg, 2.jpg, 3.jpg, etc.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;put-the-following-script-in-a-file-convertsh&quot;&gt;Put the following script in a file (convert.sh)&lt;/h3&gt;

&lt;p&gt;This script goes through all the .jpg files in the current directory, and
resizes their width down to 500px, and resizes the height based on the current
aspect ratio of the image.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jpg
&lt;span class=&quot;k&quot;&gt;do
  &lt;/span&gt;convert &lt;span class=&quot;nt&quot;&gt;-resize&lt;/span&gt; 500 &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; resized/&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; processed
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Save the file, then back in the shell make it executable:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ chmod 700 convert.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Make a ‘resized’ folder&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ mkdir resized&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Run convert.sh&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ ./convert.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CD into the ‘resized’ folder that was just created, and run mogrify&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd resized
$ mogrify -path . -format gif *.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will convert all .jpg files to .gif files, which are required for gifcicle to make an animated gif from multiple gif files.&lt;/p&gt;

&lt;h3 id=&quot;use-gifcicle-to-create-the-final-gif&quot;&gt;Use gifcicle to create the final gif&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ gifsicle --delay=30 --colors=256 --loop *.gif &amp;gt; animated.gif&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Done!&lt;/p&gt;

&lt;p&gt;Now you’ve got an animated gif file called animated.gif in the ‘resized’
folder. This particular one will loop forever.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Deconstructing Fitbit's active score</title>
   <link href="http://cfurrow.github.io/health/2012/06/04/deconstructing-fitbit-active-score"/>
   <updated>2012-06-04T00:00:00-04:00</updated>
   <id>http://cfurrow.github.io/health/2012/06/04/deconstructing-fitbit-active-score</id>
   <content type="html">&lt;h3 id=&quot;eh&quot;&gt;Eh?&lt;/h3&gt;

&lt;p&gt;If you’re not familiar with FitBit, here’s the skinny: it’s a tiny device you
clip to yourself practically 24/7. It tracks things like steps taken, miles
traveled, and flights of stairs climbed. It has an associated website
dashboard at &lt;a href=&quot;http://fitbit.com/&quot;&gt;fitbit.com&lt;/a&gt; that helps you track other things like your current
weight, food logs, etc. It also has a concept of your daily “Active Score”.&lt;/p&gt;

&lt;p&gt;For each metric that FitBit tracks, you can set goals. Mine are as follows:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Goal&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Steps&lt;/td&gt;
      &lt;td&gt;15300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Miles&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Calories Burned&lt;/td&gt;
      &lt;td&gt;3300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Floors Climbed&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Active Score&lt;/td&gt;
      &lt;td&gt;1000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I try to hit each of those goals each day. I do pretty well most of the time,
and bump the goals up as I begin to consistently exceed them on a daily basis.&lt;/p&gt;

&lt;p&gt;Anyway, what I wanted to do was get to know this “Active Score” metric some
more. It is an all-encompassing daily snapshot of how active you were during
the day. If you were sitting down, not moving, you’d end up with an active
score of 0. Walking, climbing stairs, etc, helps boost your score, but how is
it calculated?&lt;/p&gt;

&lt;h3 id=&quot;how-fitbit-calculates-your-active-score&quot;&gt;How Fitbit calculates your Active Score&lt;/h3&gt;

&lt;p&gt;From their site:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Active Score is a rough translation of your average METs for the day
(METs = Active Score x .001 + 1). &lt;a href=&quot;http://help.fitbit.com/customer/portal/articles/176130-how-does-the-active-score-work&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So what is MET? From Wikipedia:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MET (or Metabolic Equivalent) is used as a means of expressing the intensity
and energy expenditure of activities in a way comparable among persons of
different weight. […] MET values of activities range from 0.9 (sleeping) to 18
(running at 17.5 km/h or a 5:31 mile pace). &lt;a href=&quot;http://en.wikipedia.org/wiki/Metabolic_equivalent&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that I know how an MET is calculated, how can it be used? From the wiki
page above, it has a handy comparison chart of varying METs.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Physical Activity&lt;/th&gt;
      &lt;th&gt;MET&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Light Intensity Activities&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&amp;lt; 3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sleeping&lt;/td&gt;
      &lt;td&gt;0.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;watching television&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;writing, desk work, typing&lt;/td&gt;
      &lt;td&gt;1.8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;walking, 1.7 mph (2.7 km/h), level ground, strolling, very slow&lt;/td&gt;
      &lt;td&gt;2.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;walking, 2.5 mph (4 km/h)&lt;/td&gt;
      &lt;td&gt;2.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Moderate Intensity Activities&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;3 to 6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bicycling, stationary, 50 watts, very light effort&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;walking 3.0 mph (4.8 km/h)&lt;/td&gt;
      &lt;td&gt;3.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;calisthenics, home exercise, light or moderate effort, general&lt;/td&gt;
      &lt;td&gt;3.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;walking 3.4 mph (5.5 km/h)&lt;/td&gt;
      &lt;td&gt;3.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bicycling, &amp;lt; 10 mph (16 km/h), leisure, to work or for pleasure&lt;/td&gt;
      &lt;td&gt;4.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bicycling, stationary, 100 watts, light effort&lt;/td&gt;
      &lt;td&gt;5.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Vigorous Intensity Activities&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&amp;gt; 6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;jogging, general&lt;/td&gt;
      &lt;td&gt;7.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Singles tennis, squash, racquet ball&lt;/td&gt;
      &lt;td&gt;7.0-12.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;calisthenics (e.g. pushups, situps, pullups,jumping jacks)&lt;/td&gt;
      &lt;td&gt;8.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;running jogging, in place&lt;/td&gt;
      &lt;td&gt;8.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;running 5mph (12 min mile)&lt;/td&gt;
      &lt;td&gt;8.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;running 6mph (10 min mile)&lt;/td&gt;
      &lt;td&gt;10.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;running 8mph&lt;/td&gt;
      &lt;td&gt;13.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;running at 10mph&lt;/td&gt;
      &lt;td&gt;16.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;why&quot;&gt;Why?&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;I wanted to know an approximation for a few reasons:&lt;/li&gt;
  &lt;li&gt;I just wanted to know how they may be calculating Active Score I wanted to
create a helper-app to help you reach your activity goal for the day.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With regards to #2 above, this was my idea:&lt;/p&gt;

&lt;p&gt;Let’s say it’s getting towards the end of the day (7-8pm) and you still
haven’t met your activity goal for the day. Let’s further say that your goal
is to have an activity score of 1,000. So what I think would be nice to know
is this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;How many more steps do I have to take to reach my goal of 1,000 AND/OR&lt;/li&gt;
  &lt;li&gt;How many more floors should I climb to reach my goal of 1,000&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So the output could be:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You are at 455 activity points for the day, to get to your goal of 1,000 you
should try and take an additional X number of steps&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Or&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You are at 455 activity points for the day, to get to your goal of 1,000 you
should try and run at 6mph for 30 minutes or 5mph for 45 minutes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m getting close to starting development on a little web app that can pull
this all together. I plan on documenting progress here.&lt;/p&gt;
</content>
 </entry>
 

</feed>
